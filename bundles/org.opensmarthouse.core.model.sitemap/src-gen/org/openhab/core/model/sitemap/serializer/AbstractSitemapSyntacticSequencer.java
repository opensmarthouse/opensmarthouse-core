/*
 * generated by Xtext 2.19.0
 */
package org.openhab.core.model.sitemap.serializer;

import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;
import org.openhab.core.model.sitemap.services.SitemapGrammarAccess;

@SuppressWarnings("all")
public abstract class AbstractSitemapSyntacticSequencer extends AbstractSyntacticSequencer {

	protected SitemapGrammarAccess grammarAccess;
	protected AbstractElementAlias match_Chart_Colorpicker_Default_Group_Image_List_Mapview_Selection_Setpoint_Slider_Switch_Video_Webview_ChartKeyword_0_or_ColorpickerKeyword_0_or_DefaultKeyword_0_or_GroupKeyword_0_or_ImageKeyword_0_or_ListKeyword_0_or_MapviewKeyword_0_or_SelectionKeyword_0_or_SetpointKeyword_0_or_SliderKeyword_0_or_SwitchKeyword_0_or_VideoKeyword_0_or_WebviewKeyword_0;
	protected AbstractElementAlias match_Chart_Colorpicker_Default_List_Mapview_Selection_Setpoint_Slider_Switch_Video_Webview_ChartKeyword_0_or_ColorpickerKeyword_0_or_DefaultKeyword_0_or_ListKeyword_0_or_MapviewKeyword_0_or_SelectionKeyword_0_or_SetpointKeyword_0_or_SliderKeyword_0_or_SwitchKeyword_0_or_VideoKeyword_0_or_WebviewKeyword_0;
	protected AbstractElementAlias match_Group_Image_GroupKeyword_0_or_ImageKeyword_0;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (SitemapGrammarAccess) access;
		match_Chart_Colorpicker_Default_Group_Image_List_Mapview_Selection_Setpoint_Slider_Switch_Video_Webview_ChartKeyword_0_or_ColorpickerKeyword_0_or_DefaultKeyword_0_or_GroupKeyword_0_or_ImageKeyword_0_or_ListKeyword_0_or_MapviewKeyword_0_or_SelectionKeyword_0_or_SetpointKeyword_0_or_SliderKeyword_0_or_SwitchKeyword_0_or_VideoKeyword_0_or_WebviewKeyword_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getChartAccess().getChartKeyword_0()), new TokenAlias(false, false, grammarAccess.getColorpickerAccess().getColorpickerKeyword_0()), new TokenAlias(false, false, grammarAccess.getDefaultAccess().getDefaultKeyword_0()), new TokenAlias(false, false, grammarAccess.getGroupAccess().getGroupKeyword_0()), new TokenAlias(false, false, grammarAccess.getImageAccess().getImageKeyword_0()), new TokenAlias(false, false, grammarAccess.getListAccess().getListKeyword_0()), new TokenAlias(false, false, grammarAccess.getMapviewAccess().getMapviewKeyword_0()), new TokenAlias(false, false, grammarAccess.getSelectionAccess().getSelectionKeyword_0()), new TokenAlias(false, false, grammarAccess.getSetpointAccess().getSetpointKeyword_0()), new TokenAlias(false, false, grammarAccess.getSliderAccess().getSliderKeyword_0()), new TokenAlias(false, false, grammarAccess.getSwitchAccess().getSwitchKeyword_0()), new TokenAlias(false, false, grammarAccess.getVideoAccess().getVideoKeyword_0()), new TokenAlias(false, false, grammarAccess.getWebviewAccess().getWebviewKeyword_0()));
		match_Chart_Colorpicker_Default_List_Mapview_Selection_Setpoint_Slider_Switch_Video_Webview_ChartKeyword_0_or_ColorpickerKeyword_0_or_DefaultKeyword_0_or_ListKeyword_0_or_MapviewKeyword_0_or_SelectionKeyword_0_or_SetpointKeyword_0_or_SliderKeyword_0_or_SwitchKeyword_0_or_VideoKeyword_0_or_WebviewKeyword_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getChartAccess().getChartKeyword_0()), new TokenAlias(false, false, grammarAccess.getColorpickerAccess().getColorpickerKeyword_0()), new TokenAlias(false, false, grammarAccess.getDefaultAccess().getDefaultKeyword_0()), new TokenAlias(false, false, grammarAccess.getListAccess().getListKeyword_0()), new TokenAlias(false, false, grammarAccess.getMapviewAccess().getMapviewKeyword_0()), new TokenAlias(false, false, grammarAccess.getSelectionAccess().getSelectionKeyword_0()), new TokenAlias(false, false, grammarAccess.getSetpointAccess().getSetpointKeyword_0()), new TokenAlias(false, false, grammarAccess.getSliderAccess().getSliderKeyword_0()), new TokenAlias(false, false, grammarAccess.getSwitchAccess().getSwitchKeyword_0()), new TokenAlias(false, false, grammarAccess.getVideoAccess().getVideoKeyword_0()), new TokenAlias(false, false, grammarAccess.getWebviewAccess().getWebviewKeyword_0()));
		match_Group_Image_GroupKeyword_0_or_ImageKeyword_0 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getGroupAccess().getGroupKeyword_0()), new TokenAlias(false, false, grammarAccess.getImageAccess().getImageKeyword_0()));
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		return "";
	}
	
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_Chart_Colorpicker_Default_Group_Image_List_Mapview_Selection_Setpoint_Slider_Switch_Video_Webview_ChartKeyword_0_or_ColorpickerKeyword_0_or_DefaultKeyword_0_or_GroupKeyword_0_or_ImageKeyword_0_or_ListKeyword_0_or_MapviewKeyword_0_or_SelectionKeyword_0_or_SetpointKeyword_0_or_SliderKeyword_0_or_SwitchKeyword_0_or_VideoKeyword_0_or_WebviewKeyword_0.equals(syntax))
				emit_Chart_Colorpicker_Default_Group_Image_List_Mapview_Selection_Setpoint_Slider_Switch_Video_Webview_ChartKeyword_0_or_ColorpickerKeyword_0_or_DefaultKeyword_0_or_GroupKeyword_0_or_ImageKeyword_0_or_ListKeyword_0_or_MapviewKeyword_0_or_SelectionKeyword_0_or_SetpointKeyword_0_or_SliderKeyword_0_or_SwitchKeyword_0_or_VideoKeyword_0_or_WebviewKeyword_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Chart_Colorpicker_Default_List_Mapview_Selection_Setpoint_Slider_Switch_Video_Webview_ChartKeyword_0_or_ColorpickerKeyword_0_or_DefaultKeyword_0_or_ListKeyword_0_or_MapviewKeyword_0_or_SelectionKeyword_0_or_SetpointKeyword_0_or_SliderKeyword_0_or_SwitchKeyword_0_or_VideoKeyword_0_or_WebviewKeyword_0.equals(syntax))
				emit_Chart_Colorpicker_Default_List_Mapview_Selection_Setpoint_Slider_Switch_Video_Webview_ChartKeyword_0_or_ColorpickerKeyword_0_or_DefaultKeyword_0_or_ListKeyword_0_or_MapviewKeyword_0_or_SelectionKeyword_0_or_SetpointKeyword_0_or_SliderKeyword_0_or_SwitchKeyword_0_or_VideoKeyword_0_or_WebviewKeyword_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Group_Image_GroupKeyword_0_or_ImageKeyword_0.equals(syntax))
				emit_Group_Image_GroupKeyword_0_or_ImageKeyword_0(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     (
	  *         'Group' | 
	  *         'Image' | 
	  *         'Video' | 
	  *         'Chart' | 
	  *         'Webview' | 
	  *         'Switch' | 
	  *         'Mapview' | 
	  *         'Slider' | 
	  *         'Selection' | 
	  *         'List' | 
	  *         'Setpoint' | 
	  *         'Colorpicker' | 
	  *         'Default'
	  *     )
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_Chart_Colorpicker_Default_Group_Image_List_Mapview_Selection_Setpoint_Slider_Switch_Video_Webview_ChartKeyword_0_or_ColorpickerKeyword_0_or_DefaultKeyword_0_or_GroupKeyword_0_or_ImageKeyword_0_or_ListKeyword_0_or_MapviewKeyword_0_or_SelectionKeyword_0_or_SetpointKeyword_0_or_SliderKeyword_0_or_SwitchKeyword_0_or_VideoKeyword_0_or_WebviewKeyword_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         'Video' | 
	  *         'Chart' | 
	  *         'Webview' | 
	  *         'Switch' | 
	  *         'Mapview' | 
	  *         'Slider' | 
	  *         'Selection' | 
	  *         'List' | 
	  *         'Setpoint' | 
	  *         'Colorpicker' | 
	  *         'Default'
	  *     )
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_Chart_Colorpicker_Default_List_Mapview_Selection_Setpoint_Slider_Switch_Video_Webview_ChartKeyword_0_or_ColorpickerKeyword_0_or_DefaultKeyword_0_or_ListKeyword_0_or_MapviewKeyword_0_or_SelectionKeyword_0_or_SetpointKeyword_0_or_SliderKeyword_0_or_SwitchKeyword_0_or_VideoKeyword_0_or_WebviewKeyword_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'Group' | 'Image'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '{' children+=Widget
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_Group_Image_GroupKeyword_0_or_ImageKeyword_0(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
