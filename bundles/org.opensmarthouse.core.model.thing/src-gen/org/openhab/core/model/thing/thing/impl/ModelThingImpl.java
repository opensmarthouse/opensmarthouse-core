/**
 * generated by Xtext 2.19.0
 */
package org.openhab.core.model.thing.thing.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.openhab.core.model.thing.thing.ModelChannel;
import org.openhab.core.model.thing.thing.ModelThing;
import org.openhab.core.model.thing.thing.ThingPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model Thing</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.openhab.core.model.thing.thing.impl.ModelThingImpl#getThingTypeId <em>Thing Type Id</em>}</li>
 *   <li>{@link org.openhab.core.model.thing.thing.impl.ModelThingImpl#getThingId <em>Thing Id</em>}</li>
 *   <li>{@link org.openhab.core.model.thing.thing.impl.ModelThingImpl#getBridgeUID <em>Bridge UID</em>}</li>
 *   <li>{@link org.openhab.core.model.thing.thing.impl.ModelThingImpl#getLocation <em>Location</em>}</li>
 *   <li>{@link org.openhab.core.model.thing.thing.impl.ModelThingImpl#getChannels <em>Channels</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModelThingImpl extends ModelPropertyContainerImpl implements ModelThing
{
  /**
   * The default value of the '{@link #getThingTypeId() <em>Thing Type Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getThingTypeId()
   * @generated
   * @ordered
   */
  protected static final String THING_TYPE_ID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getThingTypeId() <em>Thing Type Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getThingTypeId()
   * @generated
   * @ordered
   */
  protected String thingTypeId = THING_TYPE_ID_EDEFAULT;

  /**
   * The default value of the '{@link #getThingId() <em>Thing Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getThingId()
   * @generated
   * @ordered
   */
  protected static final String THING_ID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getThingId() <em>Thing Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getThingId()
   * @generated
   * @ordered
   */
  protected String thingId = THING_ID_EDEFAULT;

  /**
   * The default value of the '{@link #getBridgeUID() <em>Bridge UID</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBridgeUID()
   * @generated
   * @ordered
   */
  protected static final String BRIDGE_UID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBridgeUID() <em>Bridge UID</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBridgeUID()
   * @generated
   * @ordered
   */
  protected String bridgeUID = BRIDGE_UID_EDEFAULT;

  /**
   * The default value of the '{@link #getLocation() <em>Location</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLocation()
   * @generated
   * @ordered
   */
  protected static final String LOCATION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLocation() <em>Location</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLocation()
   * @generated
   * @ordered
   */
  protected String location = LOCATION_EDEFAULT;

  /**
   * The cached value of the '{@link #getChannels() <em>Channels</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getChannels()
   * @generated
   * @ordered
   */
  protected EList<ModelChannel> channels;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModelThingImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ThingPackage.Literals.MODEL_THING;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getThingTypeId()
  {
    return thingTypeId;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setThingTypeId(String newThingTypeId)
  {
    String oldThingTypeId = thingTypeId;
    thingTypeId = newThingTypeId;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ThingPackage.MODEL_THING__THING_TYPE_ID, oldThingTypeId, thingTypeId));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getThingId()
  {
    return thingId;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setThingId(String newThingId)
  {
    String oldThingId = thingId;
    thingId = newThingId;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ThingPackage.MODEL_THING__THING_ID, oldThingId, thingId));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getBridgeUID()
  {
    return bridgeUID;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBridgeUID(String newBridgeUID)
  {
    String oldBridgeUID = bridgeUID;
    bridgeUID = newBridgeUID;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ThingPackage.MODEL_THING__BRIDGE_UID, oldBridgeUID, bridgeUID));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getLocation()
  {
    return location;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLocation(String newLocation)
  {
    String oldLocation = location;
    location = newLocation;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ThingPackage.MODEL_THING__LOCATION, oldLocation, location));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<ModelChannel> getChannels()
  {
    if (channels == null)
    {
      channels = new EObjectContainmentEList<ModelChannel>(ModelChannel.class, this, ThingPackage.MODEL_THING__CHANNELS);
    }
    return channels;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ThingPackage.MODEL_THING__CHANNELS:
        return ((InternalEList<?>)getChannels()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ThingPackage.MODEL_THING__THING_TYPE_ID:
        return getThingTypeId();
      case ThingPackage.MODEL_THING__THING_ID:
        return getThingId();
      case ThingPackage.MODEL_THING__BRIDGE_UID:
        return getBridgeUID();
      case ThingPackage.MODEL_THING__LOCATION:
        return getLocation();
      case ThingPackage.MODEL_THING__CHANNELS:
        return getChannels();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ThingPackage.MODEL_THING__THING_TYPE_ID:
        setThingTypeId((String)newValue);
        return;
      case ThingPackage.MODEL_THING__THING_ID:
        setThingId((String)newValue);
        return;
      case ThingPackage.MODEL_THING__BRIDGE_UID:
        setBridgeUID((String)newValue);
        return;
      case ThingPackage.MODEL_THING__LOCATION:
        setLocation((String)newValue);
        return;
      case ThingPackage.MODEL_THING__CHANNELS:
        getChannels().clear();
        getChannels().addAll((Collection<? extends ModelChannel>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ThingPackage.MODEL_THING__THING_TYPE_ID:
        setThingTypeId(THING_TYPE_ID_EDEFAULT);
        return;
      case ThingPackage.MODEL_THING__THING_ID:
        setThingId(THING_ID_EDEFAULT);
        return;
      case ThingPackage.MODEL_THING__BRIDGE_UID:
        setBridgeUID(BRIDGE_UID_EDEFAULT);
        return;
      case ThingPackage.MODEL_THING__LOCATION:
        setLocation(LOCATION_EDEFAULT);
        return;
      case ThingPackage.MODEL_THING__CHANNELS:
        getChannels().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ThingPackage.MODEL_THING__THING_TYPE_ID:
        return THING_TYPE_ID_EDEFAULT == null ? thingTypeId != null : !THING_TYPE_ID_EDEFAULT.equals(thingTypeId);
      case ThingPackage.MODEL_THING__THING_ID:
        return THING_ID_EDEFAULT == null ? thingId != null : !THING_ID_EDEFAULT.equals(thingId);
      case ThingPackage.MODEL_THING__BRIDGE_UID:
        return BRIDGE_UID_EDEFAULT == null ? bridgeUID != null : !BRIDGE_UID_EDEFAULT.equals(bridgeUID);
      case ThingPackage.MODEL_THING__LOCATION:
        return LOCATION_EDEFAULT == null ? location != null : !LOCATION_EDEFAULT.equals(location);
      case ThingPackage.MODEL_THING__CHANNELS:
        return channels != null && !channels.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (thingTypeId: ");
    result.append(thingTypeId);
    result.append(", thingId: ");
    result.append(thingId);
    result.append(", bridgeUID: ");
    result.append(bridgeUID);
    result.append(", location: ");
    result.append(location);
    result.append(')');
    return result.toString();
  }

} //ModelThingImpl
