/*
 * generated by Xtext 2.19.0
 */
package org.openhab.core.model.thing.serializer;

import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;
import org.openhab.core.model.thing.services.ThingGrammarAccess;

@SuppressWarnings("all")
public abstract class AbstractThingSyntacticSequencer extends AbstractSyntacticSequencer {

	protected ThingGrammarAccess grammarAccess;
	protected AbstractElementAlias match_ModelBridge_ChannelsKeyword_6_3_q;
	protected AbstractElementAlias match_ModelBridge_ThingsKeyword_6_1_q;
	protected AbstractElementAlias match_ModelBridge___LeftCurlyBracketKeyword_6_0_ThingsKeyword_6_1_q_ChannelsKeyword_6_3_q_RightCurlyBracketKeyword_6_5__q;
	protected AbstractElementAlias match_ModelBridge___LeftSquareBracketKeyword_5_0_RightSquareBracketKeyword_5_3__q;
	protected AbstractElementAlias match_ModelChannel___LeftSquareBracketKeyword_4_0_RightSquareBracketKeyword_4_3__q;
	protected AbstractElementAlias match_ModelThing_ChannelsKeyword_6_1_q;
	protected AbstractElementAlias match_ModelThing_ThingKeyword_0_q;
	protected AbstractElementAlias match_ModelThing___LeftCurlyBracketKeyword_6_0_ChannelsKeyword_6_1_q_RightCurlyBracketKeyword_6_3__q;
	protected AbstractElementAlias match_ModelThing___LeftSquareBracketKeyword_5_0_RightSquareBracketKeyword_5_3__q;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (ThingGrammarAccess) access;
		match_ModelBridge_ChannelsKeyword_6_3_q = new TokenAlias(false, true, grammarAccess.getModelBridgeAccess().getChannelsKeyword_6_3());
		match_ModelBridge_ThingsKeyword_6_1_q = new TokenAlias(false, true, grammarAccess.getModelBridgeAccess().getThingsKeyword_6_1());
		match_ModelBridge___LeftCurlyBracketKeyword_6_0_ThingsKeyword_6_1_q_ChannelsKeyword_6_3_q_RightCurlyBracketKeyword_6_5__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getModelBridgeAccess().getLeftCurlyBracketKeyword_6_0()), new TokenAlias(false, true, grammarAccess.getModelBridgeAccess().getThingsKeyword_6_1()), new TokenAlias(false, true, grammarAccess.getModelBridgeAccess().getChannelsKeyword_6_3()), new TokenAlias(false, false, grammarAccess.getModelBridgeAccess().getRightCurlyBracketKeyword_6_5()));
		match_ModelBridge___LeftSquareBracketKeyword_5_0_RightSquareBracketKeyword_5_3__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getModelBridgeAccess().getLeftSquareBracketKeyword_5_0()), new TokenAlias(false, false, grammarAccess.getModelBridgeAccess().getRightSquareBracketKeyword_5_3()));
		match_ModelChannel___LeftSquareBracketKeyword_4_0_RightSquareBracketKeyword_4_3__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getModelChannelAccess().getLeftSquareBracketKeyword_4_0()), new TokenAlias(false, false, grammarAccess.getModelChannelAccess().getRightSquareBracketKeyword_4_3()));
		match_ModelThing_ChannelsKeyword_6_1_q = new TokenAlias(false, true, grammarAccess.getModelThingAccess().getChannelsKeyword_6_1());
		match_ModelThing_ThingKeyword_0_q = new TokenAlias(false, true, grammarAccess.getModelThingAccess().getThingKeyword_0());
		match_ModelThing___LeftCurlyBracketKeyword_6_0_ChannelsKeyword_6_1_q_RightCurlyBracketKeyword_6_3__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getModelThingAccess().getLeftCurlyBracketKeyword_6_0()), new TokenAlias(false, true, grammarAccess.getModelThingAccess().getChannelsKeyword_6_1()), new TokenAlias(false, false, grammarAccess.getModelThingAccess().getRightCurlyBracketKeyword_6_3()));
		match_ModelThing___LeftSquareBracketKeyword_5_0_RightSquareBracketKeyword_5_3__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getModelThingAccess().getLeftSquareBracketKeyword_5_0()), new TokenAlias(false, false, grammarAccess.getModelThingAccess().getRightSquareBracketKeyword_5_3()));
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		return "";
	}
	
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_ModelBridge_ChannelsKeyword_6_3_q.equals(syntax))
				emit_ModelBridge_ChannelsKeyword_6_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ModelBridge_ThingsKeyword_6_1_q.equals(syntax))
				emit_ModelBridge_ThingsKeyword_6_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ModelBridge___LeftCurlyBracketKeyword_6_0_ThingsKeyword_6_1_q_ChannelsKeyword_6_3_q_RightCurlyBracketKeyword_6_5__q.equals(syntax))
				emit_ModelBridge___LeftCurlyBracketKeyword_6_0_ThingsKeyword_6_1_q_ChannelsKeyword_6_3_q_RightCurlyBracketKeyword_6_5__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ModelBridge___LeftSquareBracketKeyword_5_0_RightSquareBracketKeyword_5_3__q.equals(syntax))
				emit_ModelBridge___LeftSquareBracketKeyword_5_0_RightSquareBracketKeyword_5_3__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ModelChannel___LeftSquareBracketKeyword_4_0_RightSquareBracketKeyword_4_3__q.equals(syntax))
				emit_ModelChannel___LeftSquareBracketKeyword_4_0_RightSquareBracketKeyword_4_3__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ModelThing_ChannelsKeyword_6_1_q.equals(syntax))
				emit_ModelThing_ChannelsKeyword_6_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ModelThing_ThingKeyword_0_q.equals(syntax))
				emit_ModelThing_ThingKeyword_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ModelThing___LeftCurlyBracketKeyword_6_0_ChannelsKeyword_6_1_q_RightCurlyBracketKeyword_6_3__q.equals(syntax))
				emit_ModelThing___LeftCurlyBracketKeyword_6_0_ChannelsKeyword_6_1_q_RightCurlyBracketKeyword_6_3__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ModelThing___LeftSquareBracketKeyword_5_0_RightSquareBracketKeyword_5_3__q.equals(syntax))
				emit_ModelThing___LeftSquareBracketKeyword_5_0_RightSquareBracketKeyword_5_3__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     'Channels:'?
	 *
	 * This ambiguous syntax occurs at:
	 *     id=UID ('[' ']')? '{' 'Things:'? (ambiguity) channels+=ModelChannel
	 *     label=STRING ('[' ']')? '{' 'Things:'? (ambiguity) channels+=ModelChannel
	 *     location=STRING ('[' ']')? '{' 'Things:'? (ambiguity) channels+=ModelChannel
	 *     properties+=ModelProperty ']' '{' 'Things:'? (ambiguity) channels+=ModelChannel
	 *     thingId=UID_SEGMENT ('[' ']')? '{' 'Things:'? (ambiguity) channels+=ModelChannel
	 *     things+=ModelBridge (ambiguity) '}' (rule end)
	 *     things+=ModelBridge (ambiguity) channels+=ModelChannel
	 *     things+=ModelThing (ambiguity) '}' (rule end)
	 *     things+=ModelThing (ambiguity) channels+=ModelChannel
	 */
	protected void emit_ModelBridge_ChannelsKeyword_6_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'Things:'?
	 *
	 * This ambiguous syntax occurs at:
	 *     id=UID ('[' ']')? '{' (ambiguity) 'Channels:'? channels+=ModelChannel
	 *     id=UID ('[' ']')? '{' (ambiguity) things+=ModelBridge
	 *     id=UID ('[' ']')? '{' (ambiguity) things+=ModelThing
	 *     label=STRING ('[' ']')? '{' (ambiguity) 'Channels:'? channels+=ModelChannel
	 *     label=STRING ('[' ']')? '{' (ambiguity) things+=ModelBridge
	 *     label=STRING ('[' ']')? '{' (ambiguity) things+=ModelThing
	 *     location=STRING ('[' ']')? '{' (ambiguity) 'Channels:'? channels+=ModelChannel
	 *     location=STRING ('[' ']')? '{' (ambiguity) things+=ModelBridge
	 *     location=STRING ('[' ']')? '{' (ambiguity) things+=ModelThing
	 *     properties+=ModelProperty ']' '{' (ambiguity) 'Channels:'? channels+=ModelChannel
	 *     properties+=ModelProperty ']' '{' (ambiguity) things+=ModelBridge
	 *     properties+=ModelProperty ']' '{' (ambiguity) things+=ModelThing
	 *     thingId=UID_SEGMENT ('[' ']')? '{' (ambiguity) 'Channels:'? channels+=ModelChannel
	 *     thingId=UID_SEGMENT ('[' ']')? '{' (ambiguity) things+=ModelBridge
	 *     thingId=UID_SEGMENT ('[' ']')? '{' (ambiguity) things+=ModelThing
	 */
	protected void emit_ModelBridge_ThingsKeyword_6_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('{' 'Things:'? 'Channels:'? '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     id=UID ('[' ']')? (ambiguity) (rule end)
	 *     label=STRING ('[' ']')? (ambiguity) (rule end)
	 *     location=STRING ('[' ']')? (ambiguity) (rule end)
	 *     properties+=ModelProperty ']' (ambiguity) (rule end)
	 *     thingId=UID_SEGMENT ('[' ']')? (ambiguity) (rule end)
	 */
	protected void emit_ModelBridge___LeftCurlyBracketKeyword_6_0_ThingsKeyword_6_1_q_ChannelsKeyword_6_3_q_RightCurlyBracketKeyword_6_5__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('[' ']')?
	 *
	 * This ambiguous syntax occurs at:
	 *     id=UID (ambiguity) '{' 'Things:'? 'Channels:'? channels+=ModelChannel
	 *     id=UID (ambiguity) '{' 'Things:'? things+=ModelBridge
	 *     id=UID (ambiguity) '{' 'Things:'? things+=ModelThing
	 *     id=UID (ambiguity) ('{' 'Things:'? 'Channels:'? '}')? (rule end)
	 *     label=STRING (ambiguity) '{' 'Things:'? 'Channels:'? channels+=ModelChannel
	 *     label=STRING (ambiguity) '{' 'Things:'? things+=ModelBridge
	 *     label=STRING (ambiguity) '{' 'Things:'? things+=ModelThing
	 *     label=STRING (ambiguity) ('{' 'Things:'? 'Channels:'? '}')? (rule end)
	 *     location=STRING (ambiguity) '{' 'Things:'? 'Channels:'? channels+=ModelChannel
	 *     location=STRING (ambiguity) '{' 'Things:'? things+=ModelBridge
	 *     location=STRING (ambiguity) '{' 'Things:'? things+=ModelThing
	 *     location=STRING (ambiguity) ('{' 'Things:'? 'Channels:'? '}')? (rule end)
	 *     thingId=UID_SEGMENT (ambiguity) '{' 'Things:'? 'Channels:'? channels+=ModelChannel
	 *     thingId=UID_SEGMENT (ambiguity) '{' 'Things:'? things+=ModelBridge
	 *     thingId=UID_SEGMENT (ambiguity) '{' 'Things:'? things+=ModelThing
	 *     thingId=UID_SEGMENT (ambiguity) ('{' 'Things:'? 'Channels:'? '}')? (rule end)
	 */
	protected void emit_ModelBridge___LeftSquareBracketKeyword_5_0_RightSquareBracketKeyword_5_3__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('[' ']')?
	 *
	 * This ambiguous syntax occurs at:
	 *     id=CHANNEL_ID (ambiguity) (rule end)
	 *     label=STRING (ambiguity) (rule end)
	 */
	protected void emit_ModelChannel___LeftSquareBracketKeyword_4_0_RightSquareBracketKeyword_4_3__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'Channels:'?
	 *
	 * This ambiguous syntax occurs at:
	 *     bridgeUID=UID ')' ('[' ']')? '{' (ambiguity) channels+=ModelChannel
	 *     id=UID ('[' ']')? '{' (ambiguity) channels+=ModelChannel
	 *     label=STRING ('[' ']')? '{' (ambiguity) channels+=ModelChannel
	 *     location=STRING ('[' ']')? '{' (ambiguity) channels+=ModelChannel
	 *     properties+=ModelProperty ']' '{' (ambiguity) channels+=ModelChannel
	 *     thingId=UID_SEGMENT ('[' ']')? '{' (ambiguity) channels+=ModelChannel
	 */
	protected void emit_ModelThing_ChannelsKeyword_6_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'Thing'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) id=UID
	 *     (rule start) (ambiguity) thingTypeId=UID_SEGMENT
	 */
	protected void emit_ModelThing_ThingKeyword_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('{' 'Channels:'? '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     bridgeUID=UID ')' ('[' ']')? (ambiguity) (rule end)
	 *     id=UID ('[' ']')? (ambiguity) (rule end)
	 *     label=STRING ('[' ']')? (ambiguity) (rule end)
	 *     location=STRING ('[' ']')? (ambiguity) (rule end)
	 *     properties+=ModelProperty ']' (ambiguity) (rule end)
	 *     thingId=UID_SEGMENT ('[' ']')? (ambiguity) (rule end)
	 */
	protected void emit_ModelThing___LeftCurlyBracketKeyword_6_0_ChannelsKeyword_6_1_q_RightCurlyBracketKeyword_6_3__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('[' ']')?
	 *
	 * This ambiguous syntax occurs at:
	 *     bridgeUID=UID ')' (ambiguity) '{' 'Channels:'? channels+=ModelChannel
	 *     bridgeUID=UID ')' (ambiguity) ('{' 'Channels:'? '}')? (rule end)
	 *     id=UID (ambiguity) '{' 'Channels:'? channels+=ModelChannel
	 *     id=UID (ambiguity) ('{' 'Channels:'? '}')? (rule end)
	 *     label=STRING (ambiguity) '{' 'Channels:'? channels+=ModelChannel
	 *     label=STRING (ambiguity) ('{' 'Channels:'? '}')? (rule end)
	 *     location=STRING (ambiguity) '{' 'Channels:'? channels+=ModelChannel
	 *     location=STRING (ambiguity) ('{' 'Channels:'? '}')? (rule end)
	 *     thingId=UID_SEGMENT (ambiguity) '{' 'Channels:'? channels+=ModelChannel
	 *     thingId=UID_SEGMENT (ambiguity) ('{' 'Channels:'? '}')? (rule end)
	 */
	protected void emit_ModelThing___LeftSquareBracketKeyword_5_0_RightSquareBracketKeyword_5_3__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
