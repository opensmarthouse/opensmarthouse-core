/*
 * generated by Xtext 2.19.0
 */
package org.openhab.core.model.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class ItemsGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ItemModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.openhab.core.model.Items.ItemModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cItemModelAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cItemsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cItemsModelItemParserRuleCall_1_0 = (RuleCall)cItemsAssignment_1.eContents().get(0);
		
		//ItemModel:
		//	{ItemModel} items+=ModelItem*;
		@Override public ParserRule getRule() { return rule; }
		
		//{ItemModel} items+=ModelItem*
		public Group getGroup() { return cGroup; }
		
		//{ItemModel}
		public Action getItemModelAction_0() { return cItemModelAction_0; }
		
		//items+=ModelItem*
		public Assignment getItemsAssignment_1() { return cItemsAssignment_1; }
		
		//ModelItem
		public RuleCall getItemsModelItemParserRuleCall_1_0() { return cItemsModelItemParserRuleCall_1_0; }
	}
	public class ModelItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.openhab.core.model.Items.ModelItem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cModelNormalItemParserRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final RuleCall cModelGroupItemParserRuleCall_0_1 = (RuleCall)cAlternatives_0.eContents().get(1);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cLabelAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLabelSTRINGTerminalRuleCall_2_0 = (RuleCall)cLabelAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLessThanSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIconAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final Alternatives cIconAlternatives_3_1_0 = (Alternatives)cIconAssignment_3_1.eContents().get(0);
		private final RuleCall cIconIDTerminalRuleCall_3_1_0_0 = (RuleCall)cIconAlternatives_3_1_0.eContents().get(0);
		private final RuleCall cIconSTRINGTerminalRuleCall_3_1_0_1 = (RuleCall)cIconAlternatives_3_1_0.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftParenthesisKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cGroupsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cGroupsIDTerminalRuleCall_4_1_0 = (RuleCall)cGroupsAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cGroupsAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cGroupsIDTerminalRuleCall_4_2_1_0 = (RuleCall)cGroupsAssignment_4_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftSquareBracketKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTagsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final Alternatives cTagsAlternatives_5_1_0 = (Alternatives)cTagsAssignment_5_1.eContents().get(0);
		private final RuleCall cTagsIDTerminalRuleCall_5_1_0_0 = (RuleCall)cTagsAlternatives_5_1_0.eContents().get(0);
		private final RuleCall cTagsSTRINGTerminalRuleCall_5_1_0_1 = (RuleCall)cTagsAlternatives_5_1_0.eContents().get(1);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cTagsAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final Alternatives cTagsAlternatives_5_2_1_0 = (Alternatives)cTagsAssignment_5_2_1.eContents().get(0);
		private final RuleCall cTagsIDTerminalRuleCall_5_2_1_0_0 = (RuleCall)cTagsAlternatives_5_2_1_0.eContents().get(0);
		private final RuleCall cTagsSTRINGTerminalRuleCall_5_2_1_0_1 = (RuleCall)cTagsAlternatives_5_2_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLeftCurlyBracketKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cBindingsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cBindingsModelBindingParserRuleCall_6_1_0 = (RuleCall)cBindingsAssignment_6_1.eContents().get(0);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cCommaKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cBindingsAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final RuleCall cBindingsModelBindingParserRuleCall_6_2_1_0 = (RuleCall)cBindingsAssignment_6_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		
		//ModelItem:
		//	(ModelNormalItem | ModelGroupItem) name=ID
		//	label=STRING? ('<' icon=(ID | STRING) '>')? ('(' groups+=ID (',' groups+=ID)* ')')? ('[' tags+=(ID | STRING) (','
		//	tags+=(ID | STRING))* ']')? ('{' bindings+=ModelBinding (',' bindings+=ModelBinding)* '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//(ModelNormalItem | ModelGroupItem) name=ID label=STRING? ('<' icon=(ID | STRING) '>')? ('(' groups+=ID (',' groups+=ID)*
		//')')? ('[' tags+=(ID | STRING) (',' tags+=(ID | STRING))* ']')? ('{' bindings+=ModelBinding (','
		//bindings+=ModelBinding)* '}')?
		public Group getGroup() { return cGroup; }
		
		//(ModelNormalItem | ModelGroupItem)
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//ModelNormalItem
		public RuleCall getModelNormalItemParserRuleCall_0_0() { return cModelNormalItemParserRuleCall_0_0; }
		
		//ModelGroupItem
		public RuleCall getModelGroupItemParserRuleCall_0_1() { return cModelGroupItemParserRuleCall_0_1; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//label=STRING?
		public Assignment getLabelAssignment_2() { return cLabelAssignment_2; }
		
		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_2_0() { return cLabelSTRINGTerminalRuleCall_2_0; }
		
		//('<' icon=(ID | STRING) '>')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'<'
		public Keyword getLessThanSignKeyword_3_0() { return cLessThanSignKeyword_3_0; }
		
		//icon=(ID | STRING)
		public Assignment getIconAssignment_3_1() { return cIconAssignment_3_1; }
		
		//(ID | STRING)
		public Alternatives getIconAlternatives_3_1_0() { return cIconAlternatives_3_1_0; }
		
		//ID
		public RuleCall getIconIDTerminalRuleCall_3_1_0_0() { return cIconIDTerminalRuleCall_3_1_0_0; }
		
		//STRING
		public RuleCall getIconSTRINGTerminalRuleCall_3_1_0_1() { return cIconSTRINGTerminalRuleCall_3_1_0_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_3_2() { return cGreaterThanSignKeyword_3_2; }
		
		//('(' groups+=ID (',' groups+=ID)* ')')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4_0() { return cLeftParenthesisKeyword_4_0; }
		
		//groups+=ID
		public Assignment getGroupsAssignment_4_1() { return cGroupsAssignment_4_1; }
		
		//ID
		public RuleCall getGroupsIDTerminalRuleCall_4_1_0() { return cGroupsIDTerminalRuleCall_4_1_0; }
		
		//(',' groups+=ID)*
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//','
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }
		
		//groups+=ID
		public Assignment getGroupsAssignment_4_2_1() { return cGroupsAssignment_4_2_1; }
		
		//ID
		public RuleCall getGroupsIDTerminalRuleCall_4_2_1_0() { return cGroupsIDTerminalRuleCall_4_2_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4_3() { return cRightParenthesisKeyword_4_3; }
		
		//('[' tags+=(ID | STRING) (',' tags+=(ID | STRING))* ']')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_5_0() { return cLeftSquareBracketKeyword_5_0; }
		
		//tags+=(ID | STRING)
		public Assignment getTagsAssignment_5_1() { return cTagsAssignment_5_1; }
		
		//(ID | STRING)
		public Alternatives getTagsAlternatives_5_1_0() { return cTagsAlternatives_5_1_0; }
		
		//ID
		public RuleCall getTagsIDTerminalRuleCall_5_1_0_0() { return cTagsIDTerminalRuleCall_5_1_0_0; }
		
		//STRING
		public RuleCall getTagsSTRINGTerminalRuleCall_5_1_0_1() { return cTagsSTRINGTerminalRuleCall_5_1_0_1; }
		
		//(',' tags+=(ID | STRING))*
		public Group getGroup_5_2() { return cGroup_5_2; }
		
		//','
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }
		
		//tags+=(ID | STRING)
		public Assignment getTagsAssignment_5_2_1() { return cTagsAssignment_5_2_1; }
		
		//(ID | STRING)
		public Alternatives getTagsAlternatives_5_2_1_0() { return cTagsAlternatives_5_2_1_0; }
		
		//ID
		public RuleCall getTagsIDTerminalRuleCall_5_2_1_0_0() { return cTagsIDTerminalRuleCall_5_2_1_0_0; }
		
		//STRING
		public RuleCall getTagsSTRINGTerminalRuleCall_5_2_1_0_1() { return cTagsSTRINGTerminalRuleCall_5_2_1_0_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5_3() { return cRightSquareBracketKeyword_5_3; }
		
		//('{' bindings+=ModelBinding (',' bindings+=ModelBinding)* '}')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_0() { return cLeftCurlyBracketKeyword_6_0; }
		
		//bindings+=ModelBinding
		public Assignment getBindingsAssignment_6_1() { return cBindingsAssignment_6_1; }
		
		//ModelBinding
		public RuleCall getBindingsModelBindingParserRuleCall_6_1_0() { return cBindingsModelBindingParserRuleCall_6_1_0; }
		
		//(',' bindings+=ModelBinding)*
		public Group getGroup_6_2() { return cGroup_6_2; }
		
		//','
		public Keyword getCommaKeyword_6_2_0() { return cCommaKeyword_6_2_0; }
		
		//bindings+=ModelBinding
		public Assignment getBindingsAssignment_6_2_1() { return cBindingsAssignment_6_2_1; }
		
		//ModelBinding
		public RuleCall getBindingsModelBindingParserRuleCall_6_2_1_0() { return cBindingsModelBindingParserRuleCall_6_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_3() { return cRightCurlyBracketKeyword_6_3; }
	}
	public class ModelGroupItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.openhab.core.model.Items.ModelGroupItem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cModelGroupItemAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGroupKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cTypeModelItemTypeParserRuleCall_2_1_0 = (RuleCall)cTypeAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cColonKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cFunctionAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cFunctionModelGroupFunctionEnumRuleCall_2_2_1_0 = (RuleCall)cFunctionAssignment_2_2_1.eContents().get(0);
		private final Group cGroup_2_2_2 = (Group)cGroup_2_2.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_2_2_0 = (Keyword)cGroup_2_2_2.eContents().get(0);
		private final Assignment cArgsAssignment_2_2_2_1 = (Assignment)cGroup_2_2_2.eContents().get(1);
		private final Alternatives cArgsAlternatives_2_2_2_1_0 = (Alternatives)cArgsAssignment_2_2_2_1.eContents().get(0);
		private final RuleCall cArgsIDTerminalRuleCall_2_2_2_1_0_0 = (RuleCall)cArgsAlternatives_2_2_2_1_0.eContents().get(0);
		private final RuleCall cArgsSTRINGTerminalRuleCall_2_2_2_1_0_1 = (RuleCall)cArgsAlternatives_2_2_2_1_0.eContents().get(1);
		private final Group cGroup_2_2_2_2 = (Group)cGroup_2_2_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_2_2_0 = (Keyword)cGroup_2_2_2_2.eContents().get(0);
		private final Assignment cArgsAssignment_2_2_2_2_1 = (Assignment)cGroup_2_2_2_2.eContents().get(1);
		private final Alternatives cArgsAlternatives_2_2_2_2_1_0 = (Alternatives)cArgsAssignment_2_2_2_2_1.eContents().get(0);
		private final RuleCall cArgsIDTerminalRuleCall_2_2_2_2_1_0_0 = (RuleCall)cArgsAlternatives_2_2_2_2_1_0.eContents().get(0);
		private final RuleCall cArgsSTRINGTerminalRuleCall_2_2_2_2_1_0_1 = (RuleCall)cArgsAlternatives_2_2_2_2_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2_2_2_3 = (Keyword)cGroup_2_2_2.eContents().get(3);
		
		//ModelGroupItem:
		//	{ModelGroupItem} 'Group' (':' type=ModelItemType (':' function=ModelGroupFunction ('(' args+=(ID | STRING) (','
		//	args+=(ID | STRING))* ')')?)?)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{ModelGroupItem} 'Group' (':' type=ModelItemType (':' function=ModelGroupFunction ('(' args+=(ID | STRING) (','
		//args+=(ID | STRING))* ')')?)?)?
		public Group getGroup() { return cGroup; }
		
		//{ModelGroupItem}
		public Action getModelGroupItemAction_0() { return cModelGroupItemAction_0; }
		
		//'Group'
		public Keyword getGroupKeyword_1() { return cGroupKeyword_1; }
		
		//(':' type=ModelItemType (':' function=ModelGroupFunction ('(' args+=(ID | STRING) (',' args+=(ID | STRING))* ')')?)?)?
		public Group getGroup_2() { return cGroup_2; }
		
		//':'
		public Keyword getColonKeyword_2_0() { return cColonKeyword_2_0; }
		
		//type=ModelItemType
		public Assignment getTypeAssignment_2_1() { return cTypeAssignment_2_1; }
		
		//ModelItemType
		public RuleCall getTypeModelItemTypeParserRuleCall_2_1_0() { return cTypeModelItemTypeParserRuleCall_2_1_0; }
		
		//(':' function=ModelGroupFunction ('(' args+=(ID | STRING) (',' args+=(ID | STRING))* ')')?)?
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//':'
		public Keyword getColonKeyword_2_2_0() { return cColonKeyword_2_2_0; }
		
		//function=ModelGroupFunction
		public Assignment getFunctionAssignment_2_2_1() { return cFunctionAssignment_2_2_1; }
		
		//ModelGroupFunction
		public RuleCall getFunctionModelGroupFunctionEnumRuleCall_2_2_1_0() { return cFunctionModelGroupFunctionEnumRuleCall_2_2_1_0; }
		
		//('(' args+=(ID | STRING) (',' args+=(ID | STRING))* ')')?
		public Group getGroup_2_2_2() { return cGroup_2_2_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_2_2_0() { return cLeftParenthesisKeyword_2_2_2_0; }
		
		//args+=(ID | STRING)
		public Assignment getArgsAssignment_2_2_2_1() { return cArgsAssignment_2_2_2_1; }
		
		//(ID | STRING)
		public Alternatives getArgsAlternatives_2_2_2_1_0() { return cArgsAlternatives_2_2_2_1_0; }
		
		//ID
		public RuleCall getArgsIDTerminalRuleCall_2_2_2_1_0_0() { return cArgsIDTerminalRuleCall_2_2_2_1_0_0; }
		
		//STRING
		public RuleCall getArgsSTRINGTerminalRuleCall_2_2_2_1_0_1() { return cArgsSTRINGTerminalRuleCall_2_2_2_1_0_1; }
		
		//(',' args+=(ID | STRING))*
		public Group getGroup_2_2_2_2() { return cGroup_2_2_2_2; }
		
		//','
		public Keyword getCommaKeyword_2_2_2_2_0() { return cCommaKeyword_2_2_2_2_0; }
		
		//args+=(ID | STRING)
		public Assignment getArgsAssignment_2_2_2_2_1() { return cArgsAssignment_2_2_2_2_1; }
		
		//(ID | STRING)
		public Alternatives getArgsAlternatives_2_2_2_2_1_0() { return cArgsAlternatives_2_2_2_2_1_0; }
		
		//ID
		public RuleCall getArgsIDTerminalRuleCall_2_2_2_2_1_0_0() { return cArgsIDTerminalRuleCall_2_2_2_2_1_0_0; }
		
		//STRING
		public RuleCall getArgsSTRINGTerminalRuleCall_2_2_2_2_1_0_1() { return cArgsSTRINGTerminalRuleCall_2_2_2_2_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_2_2_3() { return cRightParenthesisKeyword_2_2_2_3; }
	}
	public class ModelNormalItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.openhab.core.model.Items.ModelNormalItem");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cTypeModelItemTypeParserRuleCall_0 = (RuleCall)cTypeAssignment.eContents().get(0);
		
		//ModelNormalItem:
		//	type=ModelItemType;
		@Override public ParserRule getRule() { return rule; }
		
		//type=ModelItemType
		public Assignment getTypeAssignment() { return cTypeAssignment; }
		
		//ModelItemType
		public RuleCall getTypeModelItemTypeParserRuleCall_0() { return cTypeModelItemTypeParserRuleCall_0; }
	}
	public class ModelItemTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.openhab.core.model.Items.ModelItemType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBaseModelItemTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cNumberKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cColonKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1_1 = (RuleCall)cGroup_1_1.eContents().get(1);
		
		//ModelItemType:
		//	BaseModelItemType | 'Number' (':' ID)?;
		@Override public ParserRule getRule() { return rule; }
		
		//BaseModelItemType | 'Number' (':' ID)?
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BaseModelItemType
		public RuleCall getBaseModelItemTypeParserRuleCall_0() { return cBaseModelItemTypeParserRuleCall_0; }
		
		//'Number' (':' ID)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'Number'
		public Keyword getNumberKeyword_1_0() { return cNumberKeyword_1_0; }
		
		//(':' ID)?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//':'
		public Keyword getColonKeyword_1_1_0() { return cColonKeyword_1_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1_1() { return cIDTerminalRuleCall_1_1_1; }
	}
	public class BaseModelItemTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.openhab.core.model.Items.BaseModelItemType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSwitchKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cRollershutterKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cStringKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cDimmerKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cContactKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cDateTimeKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cColorKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cPlayerKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cLocationKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final Keyword cCallKeyword_9 = (Keyword)cAlternatives.eContents().get(9);
		private final Keyword cImageKeyword_10 = (Keyword)cAlternatives.eContents().get(10);
		
		//BaseModelItemType:
		//	'Switch' | 'Rollershutter' | 'String' | 'Dimmer' | 'Contact' | 'DateTime' | 'Color' | 'Player' | 'Location' | 'Call' |
		//	'Image';
		@Override public ParserRule getRule() { return rule; }
		
		//'Switch' | 'Rollershutter' | 'String' | 'Dimmer' | 'Contact' | 'DateTime' | 'Color' | 'Player' | 'Location' | 'Call' |
		//'Image'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'Switch'
		public Keyword getSwitchKeyword_0() { return cSwitchKeyword_0; }
		
		//'Rollershutter'
		public Keyword getRollershutterKeyword_1() { return cRollershutterKeyword_1; }
		
		//'String'
		public Keyword getStringKeyword_2() { return cStringKeyword_2; }
		
		//'Dimmer'
		public Keyword getDimmerKeyword_3() { return cDimmerKeyword_3; }
		
		//'Contact'
		public Keyword getContactKeyword_4() { return cContactKeyword_4; }
		
		//'DateTime'
		public Keyword getDateTimeKeyword_5() { return cDateTimeKeyword_5; }
		
		//'Color'
		public Keyword getColorKeyword_6() { return cColorKeyword_6; }
		
		//'Player'
		public Keyword getPlayerKeyword_7() { return cPlayerKeyword_7; }
		
		//'Location'
		public Keyword getLocationKeyword_8() { return cLocationKeyword_8; }
		
		//'Call'
		public Keyword getCallKeyword_9() { return cCallKeyword_9; }
		
		//'Image'
		public Keyword getImageKeyword_10() { return cImageKeyword_10; }
	}
	public class ModelBindingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.openhab.core.model.Items.ModelBinding");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeIDTerminalRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cConfigurationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cConfigurationSTRINGTerminalRuleCall_2_0 = (RuleCall)cConfigurationAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPropertiesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPropertiesModelPropertyParserRuleCall_3_1_0 = (RuleCall)cPropertiesAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cPropertiesAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cPropertiesModelPropertyParserRuleCall_3_2_1_0 = (RuleCall)cPropertiesAssignment_3_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		
		//ModelBinding:
		//	type=ID '=' configuration=STRING ('['
		//	properties+=ModelProperty? (',' properties+=ModelProperty)*
		//	']')?;
		@Override public ParserRule getRule() { return rule; }
		
		//type=ID '=' configuration=STRING ('[' properties+=ModelProperty? (',' properties+=ModelProperty)* ']')?
		public Group getGroup() { return cGroup; }
		
		//type=ID
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//ID
		public RuleCall getTypeIDTerminalRuleCall_0_0() { return cTypeIDTerminalRuleCall_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//configuration=STRING
		public Assignment getConfigurationAssignment_2() { return cConfigurationAssignment_2; }
		
		//STRING
		public RuleCall getConfigurationSTRINGTerminalRuleCall_2_0() { return cConfigurationSTRINGTerminalRuleCall_2_0; }
		
		//('[' properties+=ModelProperty? (',' properties+=ModelProperty)* ']')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3_0() { return cLeftSquareBracketKeyword_3_0; }
		
		//properties+=ModelProperty?
		public Assignment getPropertiesAssignment_3_1() { return cPropertiesAssignment_3_1; }
		
		//ModelProperty
		public RuleCall getPropertiesModelPropertyParserRuleCall_3_1_0() { return cPropertiesModelPropertyParserRuleCall_3_1_0; }
		
		//(',' properties+=ModelProperty)*
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//','
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }
		
		//properties+=ModelProperty
		public Assignment getPropertiesAssignment_3_2_1() { return cPropertiesAssignment_3_2_1; }
		
		//ModelProperty
		public RuleCall getPropertiesModelPropertyParserRuleCall_3_2_1_0() { return cPropertiesModelPropertyParserRuleCall_3_2_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3_3() { return cRightSquareBracketKeyword_3_3; }
	}
	public class ModelPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.openhab.core.model.Items.ModelProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeyIDTerminalRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueValueTypeParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//ModelProperty:
		//	key=ID '=' value=ValueType;
		@Override public ParserRule getRule() { return rule; }
		
		//key=ID '=' value=ValueType
		public Group getGroup() { return cGroup; }
		
		//key=ID
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }
		
		//ID
		public RuleCall getKeyIDTerminalRuleCall_0_0() { return cKeyIDTerminalRuleCall_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//value=ValueType
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//ValueType
		public RuleCall getValueValueTypeParserRuleCall_2_0() { return cValueValueTypeParserRuleCall_2_0; }
	}
	public class ValueTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.openhab.core.model.Items.ValueType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNUMBERParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cBOOLEANParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ValueType ecore::EJavaObject:
		//	STRING | NUMBER | BOOLEAN;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | NUMBER | BOOLEAN
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//NUMBER
		public RuleCall getNUMBERParserRuleCall_1() { return cNUMBERParserRuleCall_1; }
		
		//BOOLEAN
		public RuleCall getBOOLEANParserRuleCall_2() { return cBOOLEANParserRuleCall_2; }
	}
	public class BOOLEANElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.openhab.core.model.Items.BOOLEAN");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//BOOLEAN ecore::EBoolean:
		//	'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class NUMBERElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.openhab.core.model.Items.NUMBER");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//NUMBER ecore::EBigDecimal:
		//	ID ('.' ID)?;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ('.' ID)?
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('.' ID)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	
	public class ModelGroupFunctionElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.openhab.core.model.Items.ModelGroupFunction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cEQUALITYEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cEQUALITYEQUALITYKeyword_0_0 = (Keyword)cEQUALITYEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cANDEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cANDANDKeyword_1_0 = (Keyword)cANDEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cOREnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cORORKeyword_2_0 = (Keyword)cOREnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cNANDEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cNANDNANDKeyword_3_0 = (Keyword)cNANDEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cNOREnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cNORNORKeyword_4_0 = (Keyword)cNOREnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cAVGEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cAVGAVGKeyword_5_0 = (Keyword)cAVGEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cSUMEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cSUMSUMKeyword_6_0 = (Keyword)cSUMEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cMAXEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cMAXMAXKeyword_7_0 = (Keyword)cMAXEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cMINEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cMINMINKeyword_8_0 = (Keyword)cMINEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cCOUNTEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cCOUNTCOUNTKeyword_9_0 = (Keyword)cCOUNTEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cLATESTEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cLATESTLATESTKeyword_10_0 = (Keyword)cLATESTEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cEARLIESTEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cEARLIESTEARLIESTKeyword_11_0 = (Keyword)cEARLIESTEnumLiteralDeclaration_11.eContents().get(0);
		
		//enum ModelGroupFunction:
		//	EQUALITY | AND | OR | NAND | NOR | AVG | SUM | MAX | MIN | COUNT | LATEST | EARLIEST;
		public EnumRule getRule() { return rule; }
		
		//EQUALITY | AND | OR | NAND | NOR | AVG | SUM | MAX | MIN | COUNT | LATEST | EARLIEST
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EQUALITY
		public EnumLiteralDeclaration getEQUALITYEnumLiteralDeclaration_0() { return cEQUALITYEnumLiteralDeclaration_0; }
		
		//'EQUALITY'
		public Keyword getEQUALITYEQUALITYKeyword_0_0() { return cEQUALITYEQUALITYKeyword_0_0; }
		
		//AND
		public EnumLiteralDeclaration getANDEnumLiteralDeclaration_1() { return cANDEnumLiteralDeclaration_1; }
		
		//'AND'
		public Keyword getANDANDKeyword_1_0() { return cANDANDKeyword_1_0; }
		
		//OR
		public EnumLiteralDeclaration getOREnumLiteralDeclaration_2() { return cOREnumLiteralDeclaration_2; }
		
		//'OR'
		public Keyword getORORKeyword_2_0() { return cORORKeyword_2_0; }
		
		//NAND
		public EnumLiteralDeclaration getNANDEnumLiteralDeclaration_3() { return cNANDEnumLiteralDeclaration_3; }
		
		//'NAND'
		public Keyword getNANDNANDKeyword_3_0() { return cNANDNANDKeyword_3_0; }
		
		//NOR
		public EnumLiteralDeclaration getNOREnumLiteralDeclaration_4() { return cNOREnumLiteralDeclaration_4; }
		
		//'NOR'
		public Keyword getNORNORKeyword_4_0() { return cNORNORKeyword_4_0; }
		
		//AVG
		public EnumLiteralDeclaration getAVGEnumLiteralDeclaration_5() { return cAVGEnumLiteralDeclaration_5; }
		
		//'AVG'
		public Keyword getAVGAVGKeyword_5_0() { return cAVGAVGKeyword_5_0; }
		
		//SUM
		public EnumLiteralDeclaration getSUMEnumLiteralDeclaration_6() { return cSUMEnumLiteralDeclaration_6; }
		
		//'SUM'
		public Keyword getSUMSUMKeyword_6_0() { return cSUMSUMKeyword_6_0; }
		
		//MAX
		public EnumLiteralDeclaration getMAXEnumLiteralDeclaration_7() { return cMAXEnumLiteralDeclaration_7; }
		
		//'MAX'
		public Keyword getMAXMAXKeyword_7_0() { return cMAXMAXKeyword_7_0; }
		
		//MIN
		public EnumLiteralDeclaration getMINEnumLiteralDeclaration_8() { return cMINEnumLiteralDeclaration_8; }
		
		//'MIN'
		public Keyword getMINMINKeyword_8_0() { return cMINMINKeyword_8_0; }
		
		//COUNT
		public EnumLiteralDeclaration getCOUNTEnumLiteralDeclaration_9() { return cCOUNTEnumLiteralDeclaration_9; }
		
		//'COUNT'
		public Keyword getCOUNTCOUNTKeyword_9_0() { return cCOUNTCOUNTKeyword_9_0; }
		
		//LATEST
		public EnumLiteralDeclaration getLATESTEnumLiteralDeclaration_10() { return cLATESTEnumLiteralDeclaration_10; }
		
		//'LATEST'
		public Keyword getLATESTLATESTKeyword_10_0() { return cLATESTLATESTKeyword_10_0; }
		
		//EARLIEST
		public EnumLiteralDeclaration getEARLIESTEnumLiteralDeclaration_11() { return cEARLIESTEnumLiteralDeclaration_11; }
		
		//'EARLIEST'
		public Keyword getEARLIESTEARLIESTKeyword_11_0() { return cEARLIESTEARLIESTKeyword_11_0; }
	}
	
	private final ItemModelElements pItemModel;
	private final ModelItemElements pModelItem;
	private final ModelGroupItemElements pModelGroupItem;
	private final ModelGroupFunctionElements eModelGroupFunction;
	private final ModelNormalItemElements pModelNormalItem;
	private final ModelItemTypeElements pModelItemType;
	private final BaseModelItemTypeElements pBaseModelItemType;
	private final ModelBindingElements pModelBinding;
	private final ModelPropertyElements pModelProperty;
	private final ValueTypeElements pValueType;
	private final BOOLEANElements pBOOLEAN;
	private final NUMBERElements pNUMBER;
	private final TerminalRule tID;
	private final TerminalRule tSTRING;
	private final TerminalRule tML_COMMENT;
	private final TerminalRule tSL_COMMENT;
	private final TerminalRule tWS;
	private final TerminalRule tANY_OTHER;
	
	private final Grammar grammar;

	@Inject
	public ItemsGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.pItemModel = new ItemModelElements();
		this.pModelItem = new ModelItemElements();
		this.pModelGroupItem = new ModelGroupItemElements();
		this.eModelGroupFunction = new ModelGroupFunctionElements();
		this.pModelNormalItem = new ModelNormalItemElements();
		this.pModelItemType = new ModelItemTypeElements();
		this.pBaseModelItemType = new BaseModelItemTypeElements();
		this.pModelBinding = new ModelBindingElements();
		this.pModelProperty = new ModelPropertyElements();
		this.pValueType = new ValueTypeElements();
		this.pBOOLEAN = new BOOLEANElements();
		this.pNUMBER = new NUMBERElements();
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.openhab.core.model.Items.ID");
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.openhab.core.model.Items.STRING");
		this.tML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.openhab.core.model.Items.ML_COMMENT");
		this.tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.openhab.core.model.Items.SL_COMMENT");
		this.tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.openhab.core.model.Items.WS");
		this.tANY_OTHER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.openhab.core.model.Items.ANY_OTHER");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.openhab.core.model.Items".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	//ItemModel:
	//	{ItemModel} items+=ModelItem*;
	public ItemModelElements getItemModelAccess() {
		return pItemModel;
	}
	
	public ParserRule getItemModelRule() {
		return getItemModelAccess().getRule();
	}
	
	//ModelItem:
	//	(ModelNormalItem | ModelGroupItem) name=ID
	//	label=STRING? ('<' icon=(ID | STRING) '>')? ('(' groups+=ID (',' groups+=ID)* ')')? ('[' tags+=(ID | STRING) (','
	//	tags+=(ID | STRING))* ']')? ('{' bindings+=ModelBinding (',' bindings+=ModelBinding)* '}')?;
	public ModelItemElements getModelItemAccess() {
		return pModelItem;
	}
	
	public ParserRule getModelItemRule() {
		return getModelItemAccess().getRule();
	}
	
	//ModelGroupItem:
	//	{ModelGroupItem} 'Group' (':' type=ModelItemType (':' function=ModelGroupFunction ('(' args+=(ID | STRING) (','
	//	args+=(ID | STRING))* ')')?)?)?;
	public ModelGroupItemElements getModelGroupItemAccess() {
		return pModelGroupItem;
	}
	
	public ParserRule getModelGroupItemRule() {
		return getModelGroupItemAccess().getRule();
	}
	
	//enum ModelGroupFunction:
	//	EQUALITY | AND | OR | NAND | NOR | AVG | SUM | MAX | MIN | COUNT | LATEST | EARLIEST;
	public ModelGroupFunctionElements getModelGroupFunctionAccess() {
		return eModelGroupFunction;
	}
	
	public EnumRule getModelGroupFunctionRule() {
		return getModelGroupFunctionAccess().getRule();
	}
	
	//ModelNormalItem:
	//	type=ModelItemType;
	public ModelNormalItemElements getModelNormalItemAccess() {
		return pModelNormalItem;
	}
	
	public ParserRule getModelNormalItemRule() {
		return getModelNormalItemAccess().getRule();
	}
	
	//ModelItemType:
	//	BaseModelItemType | 'Number' (':' ID)?;
	public ModelItemTypeElements getModelItemTypeAccess() {
		return pModelItemType;
	}
	
	public ParserRule getModelItemTypeRule() {
		return getModelItemTypeAccess().getRule();
	}
	
	//BaseModelItemType:
	//	'Switch' | 'Rollershutter' | 'String' | 'Dimmer' | 'Contact' | 'DateTime' | 'Color' | 'Player' | 'Location' | 'Call' |
	//	'Image';
	public BaseModelItemTypeElements getBaseModelItemTypeAccess() {
		return pBaseModelItemType;
	}
	
	public ParserRule getBaseModelItemTypeRule() {
		return getBaseModelItemTypeAccess().getRule();
	}
	
	//ModelBinding:
	//	type=ID '=' configuration=STRING ('['
	//	properties+=ModelProperty? (',' properties+=ModelProperty)*
	//	']')?;
	public ModelBindingElements getModelBindingAccess() {
		return pModelBinding;
	}
	
	public ParserRule getModelBindingRule() {
		return getModelBindingAccess().getRule();
	}
	
	//ModelProperty:
	//	key=ID '=' value=ValueType;
	public ModelPropertyElements getModelPropertyAccess() {
		return pModelProperty;
	}
	
	public ParserRule getModelPropertyRule() {
		return getModelPropertyAccess().getRule();
	}
	
	//ValueType ecore::EJavaObject:
	//	STRING | NUMBER | BOOLEAN;
	public ValueTypeElements getValueTypeAccess() {
		return pValueType;
	}
	
	public ParserRule getValueTypeRule() {
		return getValueTypeAccess().getRule();
	}
	
	//BOOLEAN ecore::EBoolean:
	//	'true' | 'false';
	public BOOLEANElements getBOOLEANAccess() {
		return pBOOLEAN;
	}
	
	public ParserRule getBOOLEANRule() {
		return getBOOLEANAccess().getRule();
	}
	
	//NUMBER ecore::EBigDecimal:
	//	ID ('.' ID)?;
	public NUMBERElements getNUMBERAccess() {
		return pNUMBER;
	}
	
	public ParserRule getNUMBERRule() {
		return getNUMBERAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_' | '0'..'9') ('a'..'z' | 'A'..'Z' | '_' | '-' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return tID;
	}
	
	//terminal STRING:
	//	'"' ('\\' ('b' | 't' | 'n' | 'f' | 'r' | 'u' | '"' | "'" | '\\') | !('\\' | '"'))* '"' |
	//	"'" ('\\' ('b' | 't' | 'n' | 'f' | 'r' | 'u' | '"' | "'" | '\\') | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return tML_COMMENT;
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return tSL_COMMENT;
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return tWS;
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return tANY_OTHER;
	}
}
