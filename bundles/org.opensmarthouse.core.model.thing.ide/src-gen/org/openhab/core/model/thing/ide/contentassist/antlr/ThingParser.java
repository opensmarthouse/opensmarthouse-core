/*
 * generated by Xtext 2.19.0
 */
package org.openhab.core.model.thing.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.openhab.core.model.thing.ide.contentassist.antlr.internal.InternalThingParser;
import org.openhab.core.model.thing.services.ThingGrammarAccess;

public class ThingParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(ThingGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, ThingGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getThingModelAccess().getThingsAlternatives_0(), "rule__ThingModel__ThingsAlternatives_0");
			builder.put(grammarAccess.getModelPropertyContainerAccess().getAlternatives(), "rule__ModelPropertyContainer__Alternatives");
			builder.put(grammarAccess.getModelBridgeAccess().getAlternatives_2(), "rule__ModelBridge__Alternatives_2");
			builder.put(grammarAccess.getModelBridgeAccess().getThingsAlternatives_6_2_0(), "rule__ModelBridge__ThingsAlternatives_6_2_0");
			builder.put(grammarAccess.getModelThingAccess().getAlternatives_1(), "rule__ModelThing__Alternatives_1");
			builder.put(grammarAccess.getModelChannelAccess().getAlternatives_0(), "rule__ModelChannel__Alternatives_0");
			builder.put(grammarAccess.getModelChannelAccess().getChannelKindAlternatives_0_0_0_0(), "rule__ModelChannel__ChannelKindAlternatives_0_0_0_0");
			builder.put(grammarAccess.getModelItemTypeAccess().getAlternatives(), "rule__ModelItemType__Alternatives");
			builder.put(grammarAccess.getBaseModelItemTypeAccess().getAlternatives(), "rule__BaseModelItemType__Alternatives");
			builder.put(grammarAccess.getValueTypeAccess().getAlternatives(), "rule__ValueType__Alternatives");
			builder.put(grammarAccess.getBOOLEANAccess().getAlternatives(), "rule__BOOLEAN__Alternatives");
			builder.put(grammarAccess.getModelBridgeAccess().getGroup(), "rule__ModelBridge__Group__0");
			builder.put(grammarAccess.getModelBridgeAccess().getGroup_2_1(), "rule__ModelBridge__Group_2_1__0");
			builder.put(grammarAccess.getModelBridgeAccess().getGroup_4(), "rule__ModelBridge__Group_4__0");
			builder.put(grammarAccess.getModelBridgeAccess().getGroup_5(), "rule__ModelBridge__Group_5__0");
			builder.put(grammarAccess.getModelBridgeAccess().getGroup_5_2(), "rule__ModelBridge__Group_5_2__0");
			builder.put(grammarAccess.getModelBridgeAccess().getGroup_6(), "rule__ModelBridge__Group_6__0");
			builder.put(grammarAccess.getModelThingAccess().getGroup(), "rule__ModelThing__Group__0");
			builder.put(grammarAccess.getModelThingAccess().getGroup_1_1(), "rule__ModelThing__Group_1_1__0");
			builder.put(grammarAccess.getModelThingAccess().getGroup_3(), "rule__ModelThing__Group_3__0");
			builder.put(grammarAccess.getModelThingAccess().getGroup_4(), "rule__ModelThing__Group_4__0");
			builder.put(grammarAccess.getModelThingAccess().getGroup_5(), "rule__ModelThing__Group_5__0");
			builder.put(grammarAccess.getModelThingAccess().getGroup_5_2(), "rule__ModelThing__Group_5_2__0");
			builder.put(grammarAccess.getModelThingAccess().getGroup_6(), "rule__ModelThing__Group_6__0");
			builder.put(grammarAccess.getModelChannelAccess().getGroup(), "rule__ModelChannel__Group__0");
			builder.put(grammarAccess.getModelChannelAccess().getGroup_0_0(), "rule__ModelChannel__Group_0_0__0");
			builder.put(grammarAccess.getModelChannelAccess().getGroup_0_1(), "rule__ModelChannel__Group_0_1__0");
			builder.put(grammarAccess.getModelChannelAccess().getGroup_4(), "rule__ModelChannel__Group_4__0");
			builder.put(grammarAccess.getModelChannelAccess().getGroup_4_2(), "rule__ModelChannel__Group_4_2__0");
			builder.put(grammarAccess.getModelItemTypeAccess().getGroup_1(), "rule__ModelItemType__Group_1__0");
			builder.put(grammarAccess.getModelPropertyAccess().getGroup(), "rule__ModelProperty__Group__0");
			builder.put(grammarAccess.getModelPropertyAccess().getGroup_3(), "rule__ModelProperty__Group_3__0");
			builder.put(grammarAccess.getCHANNEL_IDAccess().getGroup(), "rule__CHANNEL_ID__Group__0");
			builder.put(grammarAccess.getCHANNEL_IDAccess().getGroup_1(), "rule__CHANNEL_ID__Group_1__0");
			builder.put(grammarAccess.getUIDAccess().getGroup(), "rule__UID__Group__0");
			builder.put(grammarAccess.getUIDAccess().getGroup_5(), "rule__UID__Group_5__0");
			builder.put(grammarAccess.getNUMBERAccess().getGroup(), "rule__NUMBER__Group__0");
			builder.put(grammarAccess.getNUMBERAccess().getGroup_2(), "rule__NUMBER__Group_2__0");
			builder.put(grammarAccess.getThingModelAccess().getThingsAssignment(), "rule__ThingModel__ThingsAssignment");
			builder.put(grammarAccess.getModelBridgeAccess().getBridgeAssignment_1(), "rule__ModelBridge__BridgeAssignment_1");
			builder.put(grammarAccess.getModelBridgeAccess().getIdAssignment_2_0(), "rule__ModelBridge__IdAssignment_2_0");
			builder.put(grammarAccess.getModelBridgeAccess().getThingTypeIdAssignment_2_1_0(), "rule__ModelBridge__ThingTypeIdAssignment_2_1_0");
			builder.put(grammarAccess.getModelBridgeAccess().getThingIdAssignment_2_1_1(), "rule__ModelBridge__ThingIdAssignment_2_1_1");
			builder.put(grammarAccess.getModelBridgeAccess().getLabelAssignment_3(), "rule__ModelBridge__LabelAssignment_3");
			builder.put(grammarAccess.getModelBridgeAccess().getLocationAssignment_4_1(), "rule__ModelBridge__LocationAssignment_4_1");
			builder.put(grammarAccess.getModelBridgeAccess().getPropertiesAssignment_5_1(), "rule__ModelBridge__PropertiesAssignment_5_1");
			builder.put(grammarAccess.getModelBridgeAccess().getPropertiesAssignment_5_2_1(), "rule__ModelBridge__PropertiesAssignment_5_2_1");
			builder.put(grammarAccess.getModelBridgeAccess().getThingsAssignment_6_2(), "rule__ModelBridge__ThingsAssignment_6_2");
			builder.put(grammarAccess.getModelBridgeAccess().getChannelsAssignment_6_4(), "rule__ModelBridge__ChannelsAssignment_6_4");
			builder.put(grammarAccess.getModelThingAccess().getIdAssignment_1_0(), "rule__ModelThing__IdAssignment_1_0");
			builder.put(grammarAccess.getModelThingAccess().getThingTypeIdAssignment_1_1_0(), "rule__ModelThing__ThingTypeIdAssignment_1_1_0");
			builder.put(grammarAccess.getModelThingAccess().getThingIdAssignment_1_1_1(), "rule__ModelThing__ThingIdAssignment_1_1_1");
			builder.put(grammarAccess.getModelThingAccess().getLabelAssignment_2(), "rule__ModelThing__LabelAssignment_2");
			builder.put(grammarAccess.getModelThingAccess().getBridgeUIDAssignment_3_1(), "rule__ModelThing__BridgeUIDAssignment_3_1");
			builder.put(grammarAccess.getModelThingAccess().getLocationAssignment_4_1(), "rule__ModelThing__LocationAssignment_4_1");
			builder.put(grammarAccess.getModelThingAccess().getPropertiesAssignment_5_1(), "rule__ModelThing__PropertiesAssignment_5_1");
			builder.put(grammarAccess.getModelThingAccess().getPropertiesAssignment_5_2_1(), "rule__ModelThing__PropertiesAssignment_5_2_1");
			builder.put(grammarAccess.getModelThingAccess().getChannelsAssignment_6_2(), "rule__ModelThing__ChannelsAssignment_6_2");
			builder.put(grammarAccess.getModelChannelAccess().getChannelKindAssignment_0_0_0(), "rule__ModelChannel__ChannelKindAssignment_0_0_0");
			builder.put(grammarAccess.getModelChannelAccess().getTypeAssignment_0_0_1(), "rule__ModelChannel__TypeAssignment_0_0_1");
			builder.put(grammarAccess.getModelChannelAccess().getChannelTypeAssignment_0_1_1(), "rule__ModelChannel__ChannelTypeAssignment_0_1_1");
			builder.put(grammarAccess.getModelChannelAccess().getIdAssignment_2(), "rule__ModelChannel__IdAssignment_2");
			builder.put(grammarAccess.getModelChannelAccess().getLabelAssignment_3(), "rule__ModelChannel__LabelAssignment_3");
			builder.put(grammarAccess.getModelChannelAccess().getPropertiesAssignment_4_1(), "rule__ModelChannel__PropertiesAssignment_4_1");
			builder.put(grammarAccess.getModelChannelAccess().getPropertiesAssignment_4_2_1(), "rule__ModelChannel__PropertiesAssignment_4_2_1");
			builder.put(grammarAccess.getModelPropertyAccess().getKeyAssignment_0(), "rule__ModelProperty__KeyAssignment_0");
			builder.put(grammarAccess.getModelPropertyAccess().getValueAssignment_2(), "rule__ModelProperty__ValueAssignment_2");
			builder.put(grammarAccess.getModelPropertyAccess().getValueAssignment_3_1(), "rule__ModelProperty__ValueAssignment_3_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private ThingGrammarAccess grammarAccess;

	@Override
	protected InternalThingParser createParser() {
		InternalThingParser result = new InternalThingParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public ThingGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(ThingGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
