/*
 * generated by Xtext 2.19.0
 */
package org.openhab.core.model.persistence.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.openhab.core.model.persistence.ide.contentassist.antlr.internal.InternalPersistenceParser;
import org.openhab.core.model.persistence.services.PersistenceGrammarAccess;

public class PersistenceParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(PersistenceGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, PersistenceGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getStrategyAccess().getAlternatives(), "rule__Strategy__Alternatives");
			builder.put(grammarAccess.getFilterDetailsAccess().getAlternatives(), "rule__FilterDetails__Alternatives");
			builder.put(grammarAccess.getTimeFilterAccess().getUnitAlternatives_1_0(), "rule__TimeFilter__UnitAlternatives_1_0");
			builder.put(grammarAccess.getPersistenceConfigurationAccess().getItemsAlternatives_0_0(), "rule__PersistenceConfiguration__ItemsAlternatives_0_0");
			builder.put(grammarAccess.getPersistenceConfigurationAccess().getItemsAlternatives_1_1_0(), "rule__PersistenceConfiguration__ItemsAlternatives_1_1_0");
			builder.put(grammarAccess.getPersistenceConfigurationAccess().getAlternatives_3(), "rule__PersistenceConfiguration__Alternatives_3");
			builder.put(grammarAccess.getPersistenceModelAccess().getGroup(), "rule__PersistenceModel__Group__0");
			builder.put(grammarAccess.getPersistenceModelAccess().getGroup_4(), "rule__PersistenceModel__Group_4__0");
			builder.put(grammarAccess.getPersistenceModelAccess().getGroup_4_3(), "rule__PersistenceModel__Group_4_3__0");
			builder.put(grammarAccess.getPersistenceModelAccess().getGroup_6(), "rule__PersistenceModel__Group_6__0");
			builder.put(grammarAccess.getPersistenceModelAccess().getGroup_7(), "rule__PersistenceModel__Group_7__0");
			builder.put(grammarAccess.getCronStrategyAccess().getGroup(), "rule__CronStrategy__Group__0");
			builder.put(grammarAccess.getFilterAccess().getGroup(), "rule__Filter__Group__0");
			builder.put(grammarAccess.getThresholdFilterAccess().getGroup(), "rule__ThresholdFilter__Group__0");
			builder.put(grammarAccess.getTimeFilterAccess().getGroup(), "rule__TimeFilter__Group__0");
			builder.put(grammarAccess.getPersistenceConfigurationAccess().getGroup(), "rule__PersistenceConfiguration__Group__0");
			builder.put(grammarAccess.getPersistenceConfigurationAccess().getGroup_1(), "rule__PersistenceConfiguration__Group_1__0");
			builder.put(grammarAccess.getPersistenceConfigurationAccess().getGroup_2(), "rule__PersistenceConfiguration__Group_2__0");
			builder.put(grammarAccess.getPersistenceConfigurationAccess().getGroup_3_0(), "rule__PersistenceConfiguration__Group_3_0__0");
			builder.put(grammarAccess.getPersistenceConfigurationAccess().getGroup_3_0_1(), "rule__PersistenceConfiguration__Group_3_0_1__0");
			builder.put(grammarAccess.getPersistenceConfigurationAccess().getGroup_3_0_1_3(), "rule__PersistenceConfiguration__Group_3_0_1_3__0");
			builder.put(grammarAccess.getPersistenceConfigurationAccess().getGroup_3_0_2(), "rule__PersistenceConfiguration__Group_3_0_2__0");
			builder.put(grammarAccess.getPersistenceConfigurationAccess().getGroup_3_0_2_3(), "rule__PersistenceConfiguration__Group_3_0_2_3__0");
			builder.put(grammarAccess.getAllConfigAccess().getGroup(), "rule__AllConfig__Group__0");
			builder.put(grammarAccess.getGroupConfigAccess().getGroup(), "rule__GroupConfig__Group__0");
			builder.put(grammarAccess.getDECIMALAccess().getGroup(), "rule__DECIMAL__Group__0");
			builder.put(grammarAccess.getDECIMALAccess().getGroup_1(), "rule__DECIMAL__Group_1__0");
			builder.put(grammarAccess.getPersistenceModelAccess().getStrategiesAssignment_3(), "rule__PersistenceModel__StrategiesAssignment_3");
			builder.put(grammarAccess.getPersistenceModelAccess().getDefaultsAssignment_4_2(), "rule__PersistenceModel__DefaultsAssignment_4_2");
			builder.put(grammarAccess.getPersistenceModelAccess().getDefaultsAssignment_4_3_1(), "rule__PersistenceModel__DefaultsAssignment_4_3_1");
			builder.put(grammarAccess.getPersistenceModelAccess().getFiltersAssignment_6_2(), "rule__PersistenceModel__FiltersAssignment_6_2");
			builder.put(grammarAccess.getPersistenceModelAccess().getConfigsAssignment_7_2(), "rule__PersistenceModel__ConfigsAssignment_7_2");
			builder.put(grammarAccess.getStrategyAccess().getNameAssignment_1(), "rule__Strategy__NameAssignment_1");
			builder.put(grammarAccess.getCronStrategyAccess().getNameAssignment_1(), "rule__CronStrategy__NameAssignment_1");
			builder.put(grammarAccess.getCronStrategyAccess().getCronExpressionAssignment_3(), "rule__CronStrategy__CronExpressionAssignment_3");
			builder.put(grammarAccess.getFilterAccess().getNameAssignment_0(), "rule__Filter__NameAssignment_0");
			builder.put(grammarAccess.getFilterAccess().getDefinitionAssignment_2(), "rule__Filter__DefinitionAssignment_2");
			builder.put(grammarAccess.getThresholdFilterAccess().getValueAssignment_1(), "rule__ThresholdFilter__ValueAssignment_1");
			builder.put(grammarAccess.getThresholdFilterAccess().getPercentAssignment_2(), "rule__ThresholdFilter__PercentAssignment_2");
			builder.put(grammarAccess.getTimeFilterAccess().getValueAssignment_0(), "rule__TimeFilter__ValueAssignment_0");
			builder.put(grammarAccess.getTimeFilterAccess().getUnitAssignment_1(), "rule__TimeFilter__UnitAssignment_1");
			builder.put(grammarAccess.getPersistenceConfigurationAccess().getItemsAssignment_0(), "rule__PersistenceConfiguration__ItemsAssignment_0");
			builder.put(grammarAccess.getPersistenceConfigurationAccess().getItemsAssignment_1_1(), "rule__PersistenceConfiguration__ItemsAssignment_1_1");
			builder.put(grammarAccess.getPersistenceConfigurationAccess().getAliasAssignment_2_1(), "rule__PersistenceConfiguration__AliasAssignment_2_1");
			builder.put(grammarAccess.getPersistenceConfigurationAccess().getStrategiesAssignment_3_0_1_2(), "rule__PersistenceConfiguration__StrategiesAssignment_3_0_1_2");
			builder.put(grammarAccess.getPersistenceConfigurationAccess().getStrategiesAssignment_3_0_1_3_1(), "rule__PersistenceConfiguration__StrategiesAssignment_3_0_1_3_1");
			builder.put(grammarAccess.getPersistenceConfigurationAccess().getFiltersAssignment_3_0_2_2(), "rule__PersistenceConfiguration__FiltersAssignment_3_0_2_2");
			builder.put(grammarAccess.getPersistenceConfigurationAccess().getFiltersAssignment_3_0_2_3_1(), "rule__PersistenceConfiguration__FiltersAssignment_3_0_2_3_1");
			builder.put(grammarAccess.getItemConfigAccess().getItemAssignment(), "rule__ItemConfig__ItemAssignment");
			builder.put(grammarAccess.getGroupConfigAccess().getGroupAssignment_0(), "rule__GroupConfig__GroupAssignment_0");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private PersistenceGrammarAccess grammarAccess;

	@Override
	protected InternalPersistenceParser createParser() {
		InternalPersistenceParser result = new InternalPersistenceParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public PersistenceGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(PersistenceGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
