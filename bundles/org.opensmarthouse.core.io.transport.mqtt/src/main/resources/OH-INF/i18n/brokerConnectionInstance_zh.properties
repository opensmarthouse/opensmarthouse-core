mqtt.config.systemBrokerConnectionInstance.group.group_connection.label = 连接
mqtt.config.systemBrokerConnectionInstance.group.group_connection.description = 一组连接用参数。
mqtt.config.systemBrokerConnectionInstance.group.group_message_params.label = 消息
mqtt.config.systemBrokerConnectionInstance.group.group_message_params.description = 所有消息参数。
mqtt.config.systemBrokerConnectionInstance.group.group_lastwill_params.label = 上次订阅时间
mqtt.config.systemBrokerConnectionInstance.group.group_lastwill_params.description = 上次订阅时间的参数.

mqtt.config.systemBrokerConnectionInstance.name.label = 连接名称
mqtt.config.systemBrokerConnectionInstance.name.description = 连接名称帮助识别不同的连接。如果没有设置，将自动生成基于主机和端口的名称。
mqtt.config.systemBrokerConnectionInstance.host.label = 节点主机
mqtt.config.systemBrokerConnectionInstance.host.description = 节点的主机名或IP。
mqtt.config.systemBrokerConnectionInstance.port.label = 节点端口
mqtt.config.systemBrokerConnectionInstance.port.description = 自定义节点连接端口。留空使用默认的 MQTT 端口进行安全或非安全连接。
mqtt.config.systemBrokerConnectionInstance.secure.label = 安全连接？
mqtt.config.systemBrokerConnectionInstance.secure.description = 节点连接是不安全的 TCP 连接或 TLS 安全连接。
mqtt.config.systemBrokerConnectionInstance.hostnameValidated.label = 主机名已验证？
mqtt.config.systemBrokerConnectionInstance.hostnameValidated.description = 对于安全的 TLS 连接，服务器主机名将与证书中的主机名进行验证。
mqtt.config.systemBrokerConnectionInstance.username.label = 节点用户名
mqtt.config.systemBrokerConnectionInstance.username.description = 节点用户名。
mqtt.config.systemBrokerConnectionInstance.password.label = 节点密码
mqtt.config.systemBrokerConnectionInstance.password.description = 节点密码。
mqtt.config.systemBrokerConnectionInstance.clientID.label = 客户端 ID
mqtt.config.systemBrokerConnectionInstance.clientID.description = 用于此连接的可选的客户端 ID。
mqtt.config.systemBrokerConnectionInstance.keepAlive.label = 保持连接
mqtt.config.systemBrokerConnectionInstance.keepAlive.description = 设置保持连接的时间（以秒为单位）。 过长的时间设置可能会占用网络 / 发送垃圾邮件给 MQTT 服务器， 太短的值可能会导致不能及时发现连接断开。
mqtt.config.systemBrokerConnectionInstance.qos.label = 服务质量（QoS）
mqtt.config.systemBrokerConnectionInstance.qos.description = 服务质量(QoS) 是网络的一种安全机制, 是用来解决网络延迟和阻塞等问题的一种技术
mqtt.config.systemBrokerConnectionInstance.qos.option.0 = 最多一次 (尽最大努力发送“fire and forget”)
mqtt.config.systemBrokerConnectionInstance.qos.option.1 = 至少一次(保证至少发送一次消息)
mqtt.config.systemBrokerConnectionInstance.qos.option.2 = 确切一次(保证对应方只收到一次消息)
mqtt.config.systemBrokerConnectionInstance.retainMessages.label = 保留的消息
mqtt.config.systemBrokerConnectionInstance.retainMessages.description = 此连接发送的消息被保留
mqtt.config.systemBrokerConnectionInstance.lwtTopic.label = 最后的消息-主题
mqtt.config.systemBrokerConnectionInstance.lwtTopic.description = 当连接结束时，MQTT服务器将执行最后消息。这是最后消息的主题。它必须设置为执行最后消息。
mqtt.config.systemBrokerConnectionInstance.lwtMessage.label = 最后的消息-消息内容
mqtt.config.systemBrokerConnectionInstance.lwtMessage.description = 当连接结束时，MQTT服务器将执行最后消息。这是最后消息的消息内容。可以为空。
mqtt.config.systemBrokerConnectionInstance.lwtQos.label = 最后消息-服务质量（QoS）
mqtt.config.systemBrokerConnectionInstance.lwtQos.description = 服务质量(QoS) 是网络的一种安全机制, 是用来解决网络延迟和阻塞等问题的一种技术
mqtt.config.systemBrokerConnectionInstance.lwtQos.option.0 = 最多一次 (尽最大努力发送“fire and forget”)
mqtt.config.systemBrokerConnectionInstance.lwtQos.option.1 = 至少一次(保证至少发送一次消息)
mqtt.config.systemBrokerConnectionInstance.lwtQos.option.2 = 确切一次(保证对应方只收到一次消息)
mqtt.config.systemBrokerConnectionInstance.lwtRetain.label = 最后消息-保留消息
mqtt.config.systemBrokerConnectionInstance.lwtRetain.description = 当连接结束时，QTT服务器将执行最后消息M。 如果选中保留消息，MQTT服务器将保留该消息。

service.mqtt.systemBrokerConnectionInstance.label = MQTT 系统节点
