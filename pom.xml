<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.opensmarthouse</groupId>
    <artifactId>parent</artifactId>
    <version>0.9.0</version>
    <relativePath />
  </parent>

  <groupId>org.opensmarthouse.core</groupId>
  <artifactId>org.opensmarthouse.core.reactor</artifactId>
  <version>0.9.1-SNAPSHOT</version>

  <packaging>pom</packaging>

  <name>OpenSmartHouse Core</name>
  <description>This project contains the core elements of OpenSmartHouse</description>

  <modules>
    <module>bom</module>
    <module>bundles</module>
    <module>features</module>
    <!--    <module>tools</module> -->
    <!--    <module>itests</module> -->
  </modules>

  <scm>
    <connection>scm:git:https://github.com/opensmarthouse/opensmarthouse-core.git</connection>
    <developerConnection>scm:git:https://github.com/opensmarthouse/opensmarthouse-core.git</developerConnection>
    <tag>HEAD</tag>
    <url>https://github.com/opensmarthouse/opensmarthouse-core</url>
  </scm>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/opensmarthouse/opensmarthouse-core/issues</url>
  </issueManagement>

  <distributionManagement>
    <repository>
      <id>${release.repository-id}</id>
      <name>${release.repository-name}</name>
      <url>${release.repository-url}</url>
    </repository>
    <snapshotRepository>
      <uniqueVersion>false</uniqueVersion>
      <id>${snapshot.repository-id}</id>
      <name>${snapshot.repository-name}</name>
      <url>${snapshot.repository-url}</url>
    </snapshotRepository>
  </distributionManagement>

  <properties>
    <!-- This is version tag for published/public openhab packages -->
    <openhab-api.version>3.0.0-SNAPSHOT</openhab-api.version>
    <opensmarthouse-api.version>${project.version}</opensmarthouse-api.version>

    <snapshot.repository-id>opensmarthouse-snapshots</snapshot.repository-id>
    <snapshot.repository-name>OpenSmartHouse Snapshots (GitHub)</snapshot.repository-name>
    <snapshot.repository-url>https://maven.pkg.github.com/opensmarthouse/opensmarthouse-core/</snapshot.repository-url>

    <release.repository-id>bintray-releases</release.repository-id>
    <release.repository-name>Bintray Releases</release.repository-name>
    <release.repository-url>https://api.bintray.com/maven/opensmarthouse/maven/opensmarthouse-core/;publish=1</release.repository-url>

    <jackson.version>2.10.3</jackson.version>
    <jetty.version>9.4.20.v20190813</jetty.version>
    <pax.web.version>7.2.14</pax.web.version>
    <swagger.version>2.1.0</swagger.version>
    <netty.version>4.1.42.Final</netty.version>

    <sat.version>0.10.0</sat.version>

    <!-- xtext / emf / core -->
    <classgraph.version>4.8.87</classgraph.version>
    <emf-common.version>2.20.0</emf-common.version>
    <emf-ecore.version>2.22.0</emf-ecore.version>
    <emf-ecore-change.version>2.14.0</emf-ecore-change.version>
    <emf-ecore-xmi.version>2.16.0</emf-ecore-xmi.version>
    <emf-codegen.version>2.20.0</emf-codegen.version>
    <emf-mwe2.version>2.11.3</emf-mwe2.version>
    <xtext.version>2.22.0</xtext.version>

    <spotless.version>2.0.3</spotless.version>
    <spotless.check.skip>true</spotless.check.skip>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.opensmarthouse.core.bom</groupId>
        <artifactId>org.opensmarthouse.core.bom.compile</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.opensmarthouse.core.bom</groupId>
        <artifactId>org.opensmarthouse.core.bom.compile-model</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.opensmarthouse.core.bom</groupId>
        <artifactId>org.opensmarthouse.core.bom.runtime</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>org.opensmarthouse.core.bom</groupId>
        <artifactId>org.opensmarthouse.core.bom.test</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>

        <!-- BEG: bnd -->

        <!-- Use the bnd-maven-plugin and assemble the symbolic names -->
        <plugin>
          <groupId>biz.aQute.bnd</groupId>
          <artifactId>bnd-maven-plugin</artifactId>
          <version>${bnd.version}</version>
          <configuration>
            <bnd><![CDATA[Bundle-SymbolicName: ${project.artifactId}
Automatic-Module-Name: ${def;bsn}
Import-Package: \\
  io.swagger.v3.oas.annotations.*;resolution:=optional,\\
  javax.annotation.security.*;resolution:=optional,\\
  org.eclipse.jdt.annotation.*;resolution:=optional,\\
  org.openhab.core.automation.annotation.*;resolution:=optional,\\
  com.google.common.*;version="14.0",\\
  *

-exportcontents: \\
  !*.internal.*,\\
  !*.impl.*, \\
  org.openhab.*;version=${openhab-api.version},\\
  org.openhab.core.*;version=${openhab-api.version},\\
  org.opensmarthouse.*;version=${opensmarthouse-api.version},\\
  org.opensmarthouse.core.*;version=${opensmarthouse-api.version}
-sources: false
-removeheaders: Require-Capability,Provide-Capability
-contract: *
-includeresource: -${.}/NOTICE, -${.}/*.xsd]]></bnd>
            <!--
            The -removeheaders: Require-Capability,Provide-Capability section is a blessing and curse at the same time.
            Because some services references are located in public API packages we strip these to let resolution process go.
            Ideally we will be able to move components from API packages to private ones and make proper use of Require/
            Provide Capability headers. For now these are stripped from built modules.
            -->
            <!-- Bundle-SymbolicName: ${project.groupId}.${project.artifactId} -->
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>bnd-process</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <!-- Required to make the maven-jar-plugin pick up the bnd generated manifest. Also avoid packaging empty Jars -->
        <!-- Moved... -->

        <!-- Setup the indexer for running and testing -->
        <plugin>
          <groupId>biz.aQute.bnd</groupId>
          <artifactId>bnd-indexer-maven-plugin</artifactId>
          <version>${bnd.version}</version>
          <configuration>
            <localURLs>REQUIRED</localURLs>
            <attach>false</attach>
          </configuration>
          <executions>
            <execution>
              <id>index</id>
              <goals>
                <goal>index</goal>
              </goals>
              <configuration>
                <indexName>${project.artifactId}</indexName>
              </configuration>
            </execution>
            <execution>
              <id>test-index</id>
              <goals>
                <goal>index</goal>
              </goals>
              <configuration>
                <indexName>${project.artifactId}</indexName>
                <outputFile>${project.build.directory}/test-index.xml</outputFile>
                <scopes>
                  <scope>test</scope>
                </scopes>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- Define the version of the resolver plugin we use -->
        <plugin>
          <groupId>biz.aQute.bnd</groupId>
          <artifactId>bnd-resolver-maven-plugin</artifactId>
          <version>${bnd.version}</version>
          <configuration>
            <failOnChanges>false</failOnChanges>
            <bndruns />
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>resolve</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- Define the version of the export plugin we use -->
        <plugin>
          <groupId>biz.aQute.bnd</groupId>
          <artifactId>bnd-export-maven-plugin</artifactId>
          <version>${bnd.version}</version>
          <configuration>
            <resolve>true</resolve>
            <failOnChanges>true</failOnChanges>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>export</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- Define the version of the testing plugin that we use -->
        <plugin>
          <groupId>biz.aQute.bnd</groupId>
          <artifactId>bnd-testing-maven-plugin</artifactId>
          <version>${bnd.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>testing</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- Define the version of the baseline plugin we use and avoid failing when no baseline jar exists. -->
        <!-- (for example before the first release) -->
        <plugin>
          <groupId>biz.aQute.bnd</groupId>
          <artifactId>bnd-baseline-maven-plugin</artifactId>
          <version>${bnd.version}</version>
          <configuration>
            <failOnMissing>false</failOnMissing>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>baseline</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- END: bnd -->

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven-clean-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <compilerId>eclipse</compilerId>
            <compilerArgs>
              <arg>-err:+nullAnnot(org.eclipse.jdt.annotation.Nullable|org.eclipse.jdt.annotation.NonNull|org.eclipse.jdt.annotation.NonNullByDefault),+inheritNullAnnot,-nullUncheckedConversion</arg>
              <arg>-warn:+null,+inheritNullAnnot,+nullAnnotConflict,-nullUncheckedConversion,+nullAnnotRedundant,+nullDereference</arg>
            </compilerArgs>
            <showWarnings>true</showWarnings>
            <showDeprecation>true</showDeprecation>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.codehaus.plexus</groupId>
              <artifactId>plexus-compiler-eclipse</artifactId>
              <version>2.8.8</version>
            </dependency>
            <dependency>
              <groupId>org.eclipse.jdt</groupId>
              <artifactId>ecj</artifactId>
              <version>3.16.0</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven-enforcer-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven-javadoc-plugin.version}</version>
          <configuration>
            <failOnError>!${quality.skip}</failOnError>
            <!-- Turn off doclint -->
            <additionalparam>-Xdoclint:none</additionalparam>
            <!-- Frames are deprecated and will disappear at some point -->
            <additionalparam>--frames</additionalparam>
            <!-- Prevents the "undefined" module in path name, which causes a file not found when searching -->
            <additionalJOption>--no-module-directories</additionalJOption>
            <excludePackageNames>*.internal.*,nl.*</excludePackageNames>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-plugin-plugin</artifactId>
          <version>${maven-plugin-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>${maven-release-plugin.version}</version>
          <configuration>
            <preparationGoals>clean install</preparationGoals>
            <autoVersionSubmodules>true</autoVersionSubmodules>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven-site-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven-source-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.eclipse.xtend</groupId>
          <artifactId>xtend-maven-plugin</artifactId>
          <version>${xtext.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>compile</goal>
                <goal>xtend-install-debug-info</goal>
                <goal>testCompile</goal>
                <goal>xtend-test-install-debug-info</goal>
              </goals>
              <configuration>
                <outputDirectory>${basedir}/xtend-gen</outputDirectory>
                <testOutputDirectory>${basedir}/xtend-gen</testOutputDirectory>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${mojohaus-buildhelper-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>${license-maven-plugin.version}</version>
          <configuration>
            <basedir>${basedir}</basedir>
            <header>licenses/epl-2.0/header.txt</header>
            <quiet>false</quiet>
            <failIfMissing>true</failIfMissing>
            <strictCheck>true</strictCheck>
            <aggregate>true</aggregate>
            <mapping>
              <groovy>JAVADOC_STYLE</groovy>
              <mwe2>JAVADOC_STYLE</mwe2>
              <xtend>JAVADOC_STYLE</xtend>
              <xml>xml-header-style</xml>
            </mapping>
            <headerDefinitions>
              <headerDefinition>licenses/epl-2.0/xml-header-style.xml</headerDefinition>
            </headerDefinitions>
            <includes>
              <include>**/org/opensmarthouse/core/**/*.java</include>
              <include>**/org/opensmarthouse/core/**/*.mwe2</include>
              <include>**/org/opensmarthouse/core/**/*.xtend</include>
              <include>**/org/opensmarthouse/**/*.java</include>
              <include>**/org.opensmarthouse.core.semantics/**/*.groovy</include>
              <include>**/feature.xml</include>
              <include>**/OSGI-INF/*.xml</include>
            </includes>
            <excludes>
              <exclude>target/**</exclude>
              <exclude>**/pom.xml</exclude>
              <exclude>_*.java</exclude>
            </excludes>
            <useDefaultExcludes>true</useDefaultExcludes>
            <properties>
              <year>${license.year}</year>
            </properties>
            <encoding>UTF-8</encoding>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- This plugin's configuration is used to store Eclipse m2e settings only. -->
        <!-- It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.karaf.tooling</groupId>
                    <artifactId>karaf-maven-plugin</artifactId>
                    <versionRange>[4.2.1,)</versionRange>
                    <goals>
                      <goal>features-generate-descriptor</goal>
                      <goal>verify</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <versionRange>[1.4.0,)</versionRange>
                    <goals>
                      <goal>java</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>biz.aQute.bnd</groupId>
                    <artifactId>bnd-indexer-maven-plugin</artifactId>
                    <versionRange>[3.1.0,)</versionRange>
                    <goals>
                      <goal>index</goal>
                      <goal>local-index</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.commonjava.maven.plugins</groupId>
                    <artifactId>directory-maven-plugin</artifactId>
                    <versionRange>[0.3.1,)</versionRange>
                    <goals>
                      <goal>highest-basedir</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.openhab.tools.sat</groupId>
          <artifactId>sat-plugin</artifactId>
          <version>${sat.version}</version>
          <configuration>
            <pmdFilter>${basedirRoot}/tools/static-code-analysis/pmd/suppressions.properties</pmdFilter>
            <checkstyleProperties>${basedirRoot}/tools/static-code-analysis/checkstyle/ruleset.properties</checkstyleProperties>
            <checkstyleFilter>${basedirRoot}/tools/static-code-analysis/checkstyle/suppressions.xml</checkstyleFilter>
            <spotbugsExclude>${basedirRoot}/tools/static-code-analysis/spotbugs/suppressions.xml</spotbugsExclude>
          </configuration>
          <executions>
            <execution>
              <id>sat-all</id>
              <goals>
                <goal>checkstyle</goal>
                <goal>pmd</goal>
                <goal>spotbugs</goal>
                <goal>report</goal>
              </goals>
              <phase>verify</phase>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>com.github.ekryd.sortpom</groupId>
          <artifactId>sortpom-maven-plugin</artifactId>
          <version>${sortpom-maven-plugin.version}</version>
          <configuration>
            <predefinedSortOrder>recommended_2008_06</predefinedSortOrder>
            <createBackupFile>false</createBackupFile>
            <keepBlankLines>true</keepBlankLines>
          </configuration>
          <executions>
            <execution>
              <id>sortpom-verify</id>
              <goals>
                <goal>verify</goal>
              </goals>
              <phase>verify</phase>
              <configuration>
                <verifyFail>Stop</verifyFail>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>${spotless.version}</version>
          <configuration>
            <java>
              <eclipse>
                <file>openhab_codestyle.xml</file>
                <version>4.13.0</version>
              </eclipse>
              <removeUnusedImports />
              <importOrder>
                <file>openhab.importorder</file>
              </importOrder>
              <endWithNewline />
            </java>
            <formats>
              <format>
                <!-- *.xml -->
                <includes>
                  <include>src/**/*.xml</include>
                </includes>
                <excludes>
                  <exclude>**/pom.xml</exclude>
                </excludes>
                <eclipseWtp>
                  <type>XML</type>
                  <files>
                    <file>openhab_wst_xml_files.prefs</file>
                  </files>
                  <version>4.12.0</version>
                </eclipseWtp>
                <trimTrailingWhitespace />
                <endWithNewline />
              </format>
              <format>
                <!-- pom.xml -->
                <includes>
                  <include>pom.xml</include>
                </includes>
                <eclipseWtp>
                  <type>XML</type>
                  <files>
                    <file>openhab_wst_pom_file.prefs</file>
                  </files>
                  <version>4.13.0</version>
                </eclipseWtp>
                <trimTrailingWhitespace />
                <endWithNewline />
              </format>
            </formats>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.openhab.tools</groupId>
              <artifactId>openhab-codestyle</artifactId>
              <version>${sat.version}</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>codestyle_check</id>
              <goals>
                <goal>check</goal>
              </goals>
              <phase>initialize</phase>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.commonjava.maven.plugins</groupId>
        <artifactId>directory-maven-plugin</artifactId>
        <version>0.3.1</version>
        <executions>
          <execution>
            <id>directories</id>
            <goals>
              <goal>highest-basedir</goal>
            </goals>
            <phase>initialize</phase>
            <configuration>
              <property>basedirRoot</property>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-java</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <version>[11.0,12.0)</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.ekryd.sortpom</groupId>
        <artifactId>sortpom-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
      </plugin>
    </plugins>
    <extensions>
      <extension>
        <groupId>org.openhab.tools.sat</groupId>
        <artifactId>sat-extension</artifactId>
        <version>${sat.version}</version>
      </extension>
    </extensions>
  </build>

  <profiles>
    <profile>
      <id>skip-check</id>
      <activation>
        <property>
          <name>skipChecks</name>
        </property>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.openhab.tools.sat</groupId>
              <artifactId>sat-plugin</artifactId>
              <version>${sat.version}</version>
              <executions>
                <execution>
                  <id>sat-all</id>
                  <phase>none</phase>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>check-bundles</id>
      <activation>
        <file>
          <exists>src</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.openhab.tools.sat</groupId>
            <artifactId>sat-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>with-bnd-resolver-resolve</id>
      <activation>
        <property>
          <name>withResolver</name>
        </property>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>biz.aQute.bnd</groupId>
              <artifactId>bnd-resolver-maven-plugin</artifactId>
              <version>${bnd.version}</version>
              <executions>
                <execution>
                  <goals>
                    <goal>resolve</goal>
                  </goals>
                  <phase>package</phase>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>
</project>
